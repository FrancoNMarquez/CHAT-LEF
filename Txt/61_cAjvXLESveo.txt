 Titulo: Clase 31 (parte 2) Curso de Inteligencia Artificial 
 URL https://youtu.be/cAjvXLESveo  
 1143 segundos de duracion 
 Hola esta es la segunda parte de la clase número 31 te invito a empezar con [Música] [Aplausos] [Música] ella [Música] bien continuamos con la segunda parte de esta clase y como dijimos en la primera parte de esta clase Vamos a abordar ahora el tema de tomar como input un archivo de tipo mp4 o bien un video de YouTube eh Para tomar como ejemplo vamos a tomar eh una de las clases de este curso la clase 24 la parte un donde hablamos de visión computacional usando isoc seguramente lo deben recordar bien en donde bueno en el primer caso lo que hice fue tomar del archivo original del del video extraje solamente un archivo de tipo mp4 y en la segunda parte de esta segunda parte valga la redundancia vamos a hacer lo mismo pero tomando el video directamente desde el lugar donde está es de YouTube eh en general antes de continuar es importante que tengamos presente que todo esto que estamos haciendo de los resúmenes no solamente nos da la idea de poder tener el contenido de la Fuente original en una versión más resumida sino que todas aquellas personas que hacen tareas de investigación o que están permanentemente consultando información desde diversas fuentes eh teniendo un objetivo de búsqueda pero sin tener en claro si esa fuente me va a dar lo que yo quiero O no lo que yo busco o no esta tarea es muy importante porque ustedes piensen que puede ser que estemos leyendo un montón de documentos y no encontremos lo que buscamos mir Tenemos un montón de videos O podcast sí como en este caso puede ocupar el lugar Este ejemplo que vamos a hacer con un archivo mp4 Y ninguno de estos recursos ninguna de estas Fuentes tenga la información que nosotros queremos entonces el general resúmenes de todas estas cuestiones nos ayudan a entender rápidamente si allí puede haber algún tipo de información del tipo que buscamos después puede ser que en el detalle no esté exactamente lo que buscamos pero por lo menos líneas generales podemos sin mirar el documento sin escuchar el podcast o sin recorrer De punta a punta la visualización de todo un video entender Si Allí está la información que queremos o así que bueno explicado todo esto que no viene de más porque realmente es importante para valorizar esta este proceso de resumen vamos al colar Y empezamos con la última parte de esta clase bien estamos aquí entonces en la segunda parte de esta clase donde estoy instalando whisper x que justamente ya lo usamos en la clase anterior lo vamos a volver a usar ahora y es muy importante este que está aquí que nos recuerda que tenemos que configurar una gpu de tipo t4 en el contexto del colaps Sí Mientras lo vamos viendo vamos instalando whisper Ahí está arrancando y Recuerden que esto me pide siempre que lo termino de instalar que haga un restart de la sesión con lo cual eso es fundamental para poder utilizarlo Sí entonces hacemos clic aquí le dio Rest de la sesión y ya estoy en condiciones de utilizar ya reinicio allí whisper bien lo que vamos a hacer ahora es montar el colap y ahora importamos whisper x y configuro estos tres valores aquí que lo hicimos la clase pasada primero cuda que es el tipo de gpu que voy a utilizar bat size que lo vamos a usar dentro de un rato s y luego float 16 que es el compute type que voy a usar aquí debajo cuando defino los parámetros del modelo de whisper que voy a usar Qué modelo el modelo large b2 existe un large B3 que salió hace poco también bueno usamos este Obviamente que es más económico y y también más liviano no por supuesto con lo cual creo una instancia del modelo de whisper a partir de una var Que supongo model o le deben Llamar model y creo también una instancia de la carga del audio que voy a usar con whisper a partir de una variable que le llamo audio con lad audio y le pongo aquí justamente el archivo mp4 clase 24 parte 2 mp4 que es el que está tienen ustedes en el campo virtual justamente que es lo que yo les dije que extraje desde lo que es el video de YouTube saqué nada más que el audio y lo puse en este archivo mp4 bien en este caso tenemos Entonces el modelo cargado y el audio cargado Así que ejecutamos esto ahora que tengo eso lo que vamos a hacer es transcribir el contenido del mp4 en un texto para lo cual en principio hago la transcripción tomando el modelo que fue el que tenemos aquí sobre la base del audio que es lo que definimos aquí y con un batch size de tamaño igual al contenido de la variable bat size que lo habíamos fijado en 16 Recuerden que el bat Size fundamental porque Obviamente el audio va a ir entrando en lotes H este y va a ser procesado justamente a partir de esa mecánica Bueno luego de la transcripción también tengo que hacer la alineación que también lo vimos en la clase pasada justamente para que el texto me quede ordenado así que ejecutamos ambas cosas y vamos a ver el resultado que se va a alojar tanto para la transcripción como para la posterior alineación dentro de una variable que le hemos dado en Llamar results result va a tener todos los segmentos de bueno esta transcripción dado que insisto lo hemos hecho por lot no tengo todo en un solo archivo a bien terminado esto yo tengo todos los segmentos como dijimos recién de con lo cual lo que voy a hacer es recorrer todos y cada uno de esos segmentos para armar un gran texto Si bueno obviamente esto ya lo hemos hecho muchas veces con join for segment in result segment tomando una variable que he llamado seg en cada uno de los segmentos de la var result insisto es la que cogió aquí la transcripción Bueno voy a ir concatenando todos estos elementos para tener una única variable donde esté alojado el texto que se va a llamar transcription text y luego la imprimimos para ver Su contenido y lo vamos a ver justamente completo y alineado sí ven aquí está todo el contenido de la transcripción del audio de la clase 24 parte 2 en un un texto sí Bienvenidos a la segunda parte de esta clase Los invito a empezar con ella Hola a todos nuevamente estamos en la segunda parte de la clase número 24 para abordar el tema etcétera etcétera etcétera y Vamos hasta el final donde dice los espero en la próxima clase nos vemos aquí termin la clase los espero en la próxima clase nos vemos sí bien evidente ente ha hecho una transcripción completa de punta a punta de todo el mp4 el cual yo extraje del video de la clase 24 parte 2 bien Ahora que tenemos esto podemos ver cuánto se largo Sí esta transcripción 21017 y una cuestión adicional que podemos hacer porque en este caso yo lo tengo dentro del colap Qué pasa si me lo quiero llevar a un documento Bueno lo que hago justamente es with open ip.txt o sea abrir un archivo que le voy a poner ese nombre como le puedo poner cualquiera tomando como base el contenido de la variable transcription yion bajo text que es todo esto que vimos acá todo esto que vimos acá es transcription text entonces lo que hago es crear un archivo transcription txt en base al contenido de la transcription text y luego lo descargo vamos a hacer esto primero y hago un download de ese archivo en mi máquina lo voy a poner dentro de la zona de descargas Aquí bien si ahora me voy a la zona de descarga Aquí está el archivo Lo abro y veo Ni más ni menos que un archivo de tipo TT donde está Exactamente lo mismo que vimos recién en colap pero en un contexto de archivo pero ahí tenemos nada más que la transcripción ahora tenemos que ver resumen que es lo que es lo más importante de esta clase Así que lo que vamos a hacer es instalar Open y luego configurar su Api para poder usar justamente Open lo que vamos a hacer ahora es de Open Ey ch completions create vamos a usar open sin l change en este caso para hacer este resumen vamos a usar el modelo más caro ft4 y le vamos a poner en este caso rol esto es muy parecido a lo que haos en l Chain Sí el la configuración del prom del contexto y la configuración del prom del usuario donde se le hace el pedido concreto Así que en el primer caso del rol sistema el content es usted es un un experto Perdón en resumir textto o sea lo mismo que hicimos en la primera parte de esta clase y el contenido hágame un resumen del siguiente texto igual igual que el pron que armamos hoy text donde text justamente va a ser el text que proviene de transcription text sí bien ejecutamos y ahora lo que vamos a hacer es visualizar este resumen resumen obviamente es un diccionario dentro de lo cual yo voy a sacar the choices messis contan Sí y lo voy a volver a poner sobre la misma variable resumen para no eh crear una nueva variable Aunque puede hacer con una nueva no hay ningún problema Sí y este lo ejecutamos y vamos a visualizar el resumen de la transcripción del mp4 que era el contenido de la clase número 24 segunda parte sí Y aquí fíjense tenemos este resumen Este es un video tutorial sobre la segunda parte de la clase enfocada en interpretar texto desde una imagen utilizando una librería llamada Easy ocr sí e durante la clase Se preparó bueno el instructor explicó finalmente introdujo el próximo módulo del curso relacionado con el procesamiento del lenguaje natural cosa que nos tiene aquí ocupados sí bien lo mismo puedo hacer como hice con la transcripción con el resumen es decir puedo cargar esto dentro de un archivo tipo txt lo mismo puedo hacer como lo que hicimos este en el caso anterior pasar este contenido a un archivo de tipo txt y luego hacer un Download lo vuelvo a poner dentro de [Música] descargas y ahora voy aquí lo encuentro abro resumen y voy a ver Exactamente lo mismo que vi recién Pero obviamente dentro del contexto un archivo y fuera del ámbito de cola como elemento adicional podemos hacer lo mismo que usamos en la clase pasada es decir este resumen no lo quiero en texto lo quiero en audio con lo cual lo que voy a hacer es volver a usar el modelo tts 1 de Open e con la voz Alo y la podría cambiar por otro si les digo ustedes que busquen otro tipo en la página de opena hay varios nombres de otras personas sí que pueden hacer esto pero siempre sabemos que tenemos este defecto de que escuchamos el la voz de la persona con un gran acento anglosajón por más Que obviamente lo expresa en castellano bien pero se nota que el acento es diferente así que bueno Esto es Ni más ni menos que lo que hicimos la clase pasada Así que lo ejecutamos perdón hay que poner resumen uno aquí que es lo que cambiamos y ahora lo descargamos se de carga nuevamente Este es un video tutorial sobre la segunda parte de una clase enfocada en interpretar texto desde una imagen utilizando una librería llamada easyocr durante la clase Se preparó un nuevo proyecto con pycharm se utilizó la librería opencv python headless y se abordaron distintos problemas que surgieron durante la instalación el instructor explicó Cómo crear y extraer texto de imágenes tanto en español como en inglés y explicó Cómo la librería puede clasificar y guardar la información en un archivo csw para su posterior procesamiento en la segunda parte de la clase se trató sobre cómo utilizar easyocr para extraer párrafos completos de texto de una imagen en lugar de simples palabras finalmente el instructor introdujo el próximo módulo del curso relacionado con el procesamiento del lenguaje natural nlp bueno Y para cerrar esta clase lo que hacemos es esto que dice aquí transcribir el contenido de un video de YouTube es dec ya no el archivo mp4 la transcripción del archivo mp4 del cual yo extrae desde el video original sino directamente linkando el video de YouTube para lo cual vamos a instalar l change pbe y YouTube transcript app una vez que hacemos esto vamos a importar el YouTube loader o el cargador de archivos de YouTube que es unao de las librerías de Lan change lo cargamos y luego vamos a crear un objeto loader que es una instancia de YouTube loader donde le voy a poner justamente from YouTube URL O sea desde qué eh archivo en este caso la URL donde está vinculada eh está vinculado ese video Perdón está alojado ese video en YouTube y le voy a indicar que el lenguaje en este caso tiene que ser español es decir que lo que hago entonces aquí es crear el cargador loader y con ese loader voy a hacer un load es decir cargar justamente ese video pero llevando a que ejecute una transcripción que la va a poner dentro de una variable que le he dado en poner transcripción una vez hecho esto bueno imprimimos el contenido de la var transcripción y v que ahí tenemos bueno toda la información relativa a la transcripción es exactamente la misma que vimos recién es decir hola bienvenido al curso de Inteligencia artificial de IFE Los invito a empezar la clase número 24 etcétera etcétera Pero esto es un diccionario no es un texto ser que tiene distintos componentes donde vemos al final si nos acercamos justamente a yello que tengo datos como por ejemplo el título sí que es el título con el capa aparece en YouTube la descripción bueno unknown porque no tiene ninguna descripción si no aparecería allí la cantidad de veces que se visualizó ese video bueno y otro tipo de datos importantes sí En qué época se publicó largo el autor etcétera etcétera Sí por eso hemos dado aquí en hacer este código donde vamos a imprimir cada uno de estos componentes por separado por un lado el autor los segundos de duración el título y luego page content que es es justamente la parte que tiene concretamente el contenido de la transcripción Así que ejecutamos esto y vemos que me dice video de ifes icono porque el autor es ifes iono eh tiene 2146 segundos de duración el título es clase 24 parte un curso de Inteligencia artificial etcétera etcétera etcétera y bueno Luego me muestra justamente toda la eh la traducción sí de e bueno el texto la transcripción Perdón del texto completo de eh la clase 241 en este caso no hemos hecho la 242 sí Recuerden que la 241 tenía que ver con tracking la 242 era de ioc r la 241 era de tracking no importa en realidad el el tema aquí no es de del video en sí mismo sino que aquí tengo la posibilidad de hacer una en este caso evit o no tuve que hacer eso de pasar el video un4 sí como hicimos al principio est clase con lo cual en este punto en el que estoy en este momento donde tengo el texto en transcripción subcero page content estoy en la misma situación de poder hacer un resumen como lo estaba aquí sí cuando tenía transcripción txt bien Entonces estaría en el punto o con la posibilidad de hacer un resumen del texto transcripto solamente que el texto transcripto anterior lo había hecho utilizando whisper y luego en este otro caso lo usé con el YouTube loger Sí bueno dos formas distintas hacer cosas similares con orígenes diferentes obviamente porque whisper toma desde un archivo de audio que insisto puede ser un podcast acá es como que estamos tomando la misma fuente de origen en formatos diferentes pero en el caso de que sea un mp4 sería un podcast y no provendría de un video de YouTube Pero bueno lo importante es que veamos la la cantidad de variantes que tenemos que para para hacer este tipo de trabajos y la cantidad de opciones que tenemos justamente para eh utilizarlo en el momento que nos parezca más apropiado o de acuerdo a nuestras propias circunstancias con esto terminamos la segunda parte de esta clase y con esto terminamos la clase como un todo nos vemos la próxima clase Hemos llegado al final de esta clase nos vemos en la próxima clase foreign