 Titulo: Clase19 (parte 1) Curso de Inteligencia Artificial 
 URL https://youtu.be/ohHO3qSj9pM  
 1667 segundos de duracion 
 Hola bienvenidos al curso de Inteligencia artificial de ifes Los invito a empezar con nuestra clase número 19   Hola a todos Bienvenidos a la clase número 19 del curso de Inteligencia artificial de icfes seguimos en el módulo de Deep learning y seguimos dentro también del tema redes neuronales convolucionales el tema de hoy es como dijimos al finalizar la clase pasada en las últimas clases hicimos varias prácticas con redes neuronales que atendieron a un mismo tipo de problema es un problema de clasificación justamente hoy vamos a ver cómo abordar un problema de clasificación con una red pre entrenada nosotros hasta ahora lo hicimos con Data set que ya venían hechos en el caso de mis y con un Data set que si bien se los dicho lo Podrían haber hecho ustedes que era para diferenciar caballos de seres humanos si bien el modelo que vamos a usar es iolo del cual hablamos al finalizar la clase pasada no lo vamos a usar con su entrenamiento natural con el dataset coco que también referenciamos la clase pasada lo vamos a hacer con un Data set nuestro La idea es hacer una red neuronal convolucional que pueda diferenciar cuatro situaciones de clima y de momento del día básicamente vamos a tener imágenes de Día lluviosos de días soleados de Días nublados y de amaneceres La idea es que justamente nuestra red pueda diferenciar y calificar con certeza una cosa u otra dentro de esas cuatro posibilidades para que podamos entender mejor el objetivo de esta clase vamos a empezar por el final es decir vamos a mostrar las dos variantes o versiones de lo que vamos a desarrollar las vamos a ejecutar la vamos a ver y luego vamos a ir paso a paso haciendo el desarrollo para lograr ese objetivo aquí estamos ya en paichard que es la plataforma de la cual también Hablamos al finalizar la clase pasada y que les pedí que tuviesen ya instalada para empezar esta clase vamos a ejecutar Este programa de python que se llama predict.pay el cual lo vamos a ejecutar haciendo clic aquí y lo que vamos a hacer es ver si nuestro algoritmo acierta en la predicción de lo que tiene una imagen la imagen es un amanecer y la estoy poniendo escribiéndola sobre el mismo código obviamente es una versión muy sencilla pero como primer objetivo vale Así que ejecutamos el programa y vemos que lo primero que hace como yo puse Aquí tres prints es que me muestre Cuáles son las clases a clasificar y aquí me dice cero amanecer uno lluvia dos nublado tres soleado luego me dice Cuál es la probabilidad para cada clase tengo un 0,99 de que sea amanecer De hecho la imagen como dijimos antes corresponde un amanecer bueno 0 0 0 03 para lluvias 00006 para nublado y 00008 para soleado es decir que claramente es un amanecer y luego a una impresión concretamente del texto que corresponde a la probabilidad mayor es decir a la probabilidad cero corresponde el texto amanecer por eso finalmente aquí pone el texto de la clase que aprecio de manera correcta luego vamos a generar otra versión un poquito más avanzada donde va a tomar algunas imágenes de una carpeta de carpetas que tenemos con distintos tipos de imágenes de esta que hablamos recién y me va a ir imprimiendo en pantalla la imagen y va a etiquetar la predicción lo ejecutamos aquí apareció la primera Espera que le dé enter y pasa la próxima luego la otra y finalmente la otra es decir hice un código para Que aparezca una imagen de cada tipo y ha acertado en todos los casos el tipo de imagen a la que corresponde esa predicción bien Este es el objetivo de la clase de hoy lo vamos a hacer como siempre en dos partes Así que ya empezamos entrando a ver primero el tema de las imágenes que es el más importante y luego empezando a entrar por primera vez a Paisa y desarrollar nuestro primer proyecto en esa plataforma bien como habíamos hablado hay un conjunto de datos de imágenes que yo les voy a pasar a ustedes pero tranquilos después al finalizar la clase les voy a decir cómo podrían haberlo hecho ustedes Esto es para acelerar un poquito esta práctica el archivo zipeado o comprimido es este que está aquí dataset.ar lo van a tener en el campo virtual lo van a poder bajar y lo vamos a poner en una carpeta que le vamos a llamar clasificador este otro archivo que está aquí por ahora vamos a dejar en Stand By ya vamos a hablar del más adelante  bien como vieron lo que hice fue poner este archivo rar en esta carpeta nueva que acabamos de crear clasificador lo abrí y hice la extracción de los datos en esta misma carpeta con lo cual ahora ya no nos sirve más lo podemos borrar sin ningún tipo de problemas y vamos a entrar a ver la carpeta Data set tiene dos carpetas tren igual obviamente como ustedes ya van a suponer y correctamente una para entrenamiento y otra para validación esto es muy importante cuando lo hagan ustedes que las carpetas se llamen de este modo si no el entrenamiento con hielo no va a andar bien Sí entonces train y vals son nombres exigidos luego dentro de esto voy a poner una carpeta para cada uno de los tipos de imágenes aquí si ustedes pueden ponerle como quieran sí Entonces vamos a entrar por ejemplo en amanecer y están todas las imágenes de amaneceres sí los nombres también de las imágenes pueden ser los que ustedes quieran luego tenemos lluvia otro tanto nublado otro tanto y soleado otro tanto es conveniente que todas las carpetas de cada una de las opciones tengan la misma cantidad de imágenes Esto no es una exigencia una obligación Pero siempre es conveniente para que sea más equilibrado justamente el algoritmo que vaya a desarrollar esta red neuronal luego vamos un poquito hacia atrás y tenemos Val que tiene exactamente la misma distribución amanecer lluvia nublado y soleado la diferencia es que en el caso de Val tengo 35 imágenes sí y en el caso vamos hacia atrás de train tengo 174 imágenes esto como hacemos siempre con este equilibrio entre cantidad de observaciones para el conjunto de entrenamiento y cantidad de observaciones para el conjunto de validación en este caso hace una relación de 20-25%. eso hay que seguir manteniéndolo que es igual a lo que venimos trabajando antes bien a continuación vamos a crear el proyecto Por lo cual vamos a ver python yo aquí lo tengo abierto ya con el proyecto terminado pero vamos a crear otro proyecto en otra ventana sobre el mismo entorno de pinchard voy a venir a file y le voy a dar New proyecto una vez aquí fíjense que aparece la localización donde yo voy a crear este proyecto y voy a buscar la carpeta c dentro de ese clasificador una vez que la elijo le doy ok Y le doy create acá voy a decir una unidad fíjense que la base o el intérprete base es python tienen que tener obviamente payton instalado es una novedad porque ya venimos trabajando sirviendo trabajamos dentro de cola ya venimos trabajando con python Así que python lo tienen que tener instalado aquí tengo la versión 310 Pues a la que corresponda automáticamente le vas a poner aquí en la base o el intérprete base de python de la versión que ustedes tengan instalado creamos el proyecto y acá me va a decir si creo el proyecto desde la carpeta existente o quiero hacer una carpeta nueva No justamente lo voy a hacer con la carpeta que Acabo de crear antes así que lo de create y acá lo que me pregunta es si quiero cerrar esta ventana que tengo abierta y poner sobre esta única ventana el proyecto que estoy creando o Quiero crear una nueva ventana para el proyecto nuevo conservando la ventana anterior para el proyecto antiguo Así que le voy a decir que quiero una New Windows Bueno aquí está creando un entorno virtual que esto es fundamental para generar este tipo de proyectos Así que eso toma un tiempito pero ya está estas ventanas le van a aparecer muchas veces vamos a maximizar esto aquí que son recomendaciones o tips Sí bueno ustedes lo pueden leer en algunos casos tienen que ver bueno como dice aquí como combinar teclas Bueno no es algo que lo necesiten Así que lo cerramos y avanzamos aquí fíjense que ya me reconoce que dentro de mi carpeta clasificador existe ya una estructura conformada por datasette yo ahora voy a ir al explorador de Windows y lo voy a meter todo esto dentro de la carpeta datos Porque por ahí en algún momento quiero manejar otro tipo de datos que no son solamente y creo que queda más ordenado así es una cuestión de gusto nada más así que vamos a hacer eso justamente para tener una modalidad y una forma de cómo manejarse con este tipo de criterio  bien ya tenemos dentro de datos Entonces ahora te hace todo lo que habíamos visto antes y si vuelve un poquito hacia atrás voy a ver que también me ha creado la carpeta del entorno virtual que se está que está aquí y esta punto hay día también son dos carpetas básicas de cualquier estructura de un proyecto de tipo bien volvemos al paisa fíjense que ahora lo que hice en el explorador de Windows me lo resalta aquí así que me crea automáticamente este o sea refleja automáticamente el contenido de la carpeta que he elegido para crear Bueno lo que vamos a hacer a continuación es crear nuestro primer programa de python dentro de una interfaz de python Sí así que venimos aquí donde está el nombre de la carpeta principal y le doy botón derecho nuevo python file y vamos a poner train.ar porque traen punto Pay porque lo primero que vamos a hacer es entrenar a nuestro modelo de Yolo con nuestro propio Data bien Aquí está el código de este train punto fíjense que son solamente tres líneas y con tres líneas vamos a entrenar al modelo esta red pre entrenada Yolo de 8 que es la última o una de las últimas versiones Perdón junto con nuestro datasette en principio lo que tengo que hacer y aquí fíjese que me lo marca justamente en rojo es importar la librería ultralitiks que es la que justamente me habilita el uso para ello vamos a file settings y aquí lo que vamos a ir es a la sección donde dice project con el nombre del proyecto nuestro lo abrimos y vamos a project interpreter aquí fíjense que tiene un más y un menos evidentemente el menos va a accionarse cuando yo seleccione una librería para quitarla y si no con más vamos a agregar una hacemos clic aquí y buscamos en esta barra o sea lo podemos Buscar de arriba hacia abajo va a ser bastante complicado porque tiene muchísimas muchísimas opciones y librerías que ya vienen preconfiguradas vamos a poner Ultra buscando por aproximación y aquí lo encuentra y vamos a elegir la versión de ultralitiks que vamos a instalar esto tiene que ver para tener mayor garantía de éxito Con la práctica y que ustedes no tengan ningún problema Esto va a pasar permanentemente el tema de las versiones puede ser que ustedes hagan una práctica la misma con el mismo código sin ningún cambio con una versión posterior o anterior y haya habido algún cambio en esa librería Y ustedes tengan algún problema no va a pasar nada seguramente cuando aparecen estas cosas siempre les da algún tipo de referencia también lo pueden buscar en algún buscador bueno Cuál es la nueva versión es cuál es la variante de alguna cuestión que tenga que ver con esa librería y solucionamos el tema pero para que sea lo más efectivo posible este proceso vamos a instalar una versión determinada la versión es la 8058 la última versión no es esa es posterior a eso así que vamos a hacer clic aquí para decirle que quiero una versión específica y buscamos la que dejemos recién la 80 58 insisto Esto es para tener mayor tranquilidad puede ser que tomemos la última versión y no tengamos ningún problema pero bueno para evitarlo los propósitos del éxito de esta clase vamos a utilizar la misma que utilice yo cuando estuvimos cuando creamos esta clase Así que habiendo elegido la librería y habiendo elegido la versión le doy install va a tardar un tiempo Eso depende mucho de la librería librerías Obviamente que son más pesadas que tarda más tiempo y otras no tanto bien así terminó de instalar sutralities lo que vamos a instalar ahora es nampai así que sin salir de aquí directamente borro lo que estaba escrito y escribo la nueva librería que Quiero instalar y lo mismo install esta va a tardar menos obviamente ya está bueno son estas dos nada más por ahora después vamos a instalar seguramente más así que cerramos esta ventana le damos Ok y ya fíjense que obviamente lo que estás viendo aquí ya no aparece señalizado como antes como que estaba Había algo que faltaba instalar Bueno lo próximo es crear el modelo fíjense que es sencillo es hacerlo invoco a Yolo que es lo que había importado aquí y pongo dentro de los paréntesis el tipo de modelo de hielo que quiero no solamente me refiero a la versión en este caso es la v8 sino también a dos cuestiones a tener en cuenta primero Qué tipo de problema quiero abordar y Por ende tengo que elegir un modelo que tenga que ver con ese problema y segundo qué nivel de peso de requiero si una red liviana y rápida o pesada y más lenta pero más precisa como ya sabemos dijimos antes Bueno eso es lo que tengo que elegir ahora lo que vamos a elegir es un nuevo que sirva para clasificación por eso esta parte del nombre cls y la versión más liviana que es la n esto de dónde lo saco en realidad si yo ejecuto este programa sin que tenga esto instalado automáticamente lo va a instalar python pero vamos a verlo más prolijo vamos a ir al sitio de Yolo y lo vamos a bajar Desde allí lo vamos a poner dentro de nuestra carpeta y una vez que esté allí vamos a ejecutar y vamos a avanzar con el siguiente paso de este programa bueno acá estoy en la sección models la reaccionó si hago clic en este menú de ultralitics al sitio lo conocen porque hablamos de él en la última clase y selecciono aquí el modelo que quiero que 8 hago clic aquí y fíjense que bueno acá hay una gráfica muy interesante porque me muestra todas las versiones que existen y cuál es bueno mi nivel de rendimiento obviamente superador en cuanto lográndose mejores versiones sí lo que voy a hacer aquí es ir a esta sección Donde tengo los tipos de problemas que se pueden abordar con libros detección segmentación clasificación y voz lo que nos consideramos nosotros es clasificación Así que voy aquí y elijo lo que vimos recién si la yo lo v8 n que es la más liviana así como x es la más pesada entonces hago clic aquí y va a bajarme esa versión donde la voy a poner bueno en la carpeta que venimos trabajando dentro de clasificador es decir aquí y volvemos al entorno de Paisa donde estábamos con el tren punto Pipe que estábamos programando y constatamos de que ahora aparece aquí justamente en esta visión que me muestra esta explorador interno que tiene Paisa lo que acabo de bajar esto que está aquí es lo que vimos y ahora vamos a ir hacia allí Aquí vemos los dos archivos que están en el campus virtual que ustedes al bajar lo pueden utilizarlos y este que está acá es el que acabamos de bajar Sí yo se los paso por cualquier cosa pero en realidad lo mejor es que aprendan a bajarlo porque así van a poder bajar el modelo que quieran cuando quieran bien ya tenemos creado el modelo que tenemos que hacer ahora entrenarlo con lo cual con modo el punto 30 y entre paréntesis tengo que poner lo siguiente en principio Dónde están las imágenes están en C de barra clasificador barra de datos barra de datos esto traten de poner la ruta completa para que no tener ningún tipo de inconveniente luego la cantidad de epox O sea la cantidad de entrenamientos con que quiero que se entrene Este modelo de iolo con mi conjunto de datos y finalmente el tamaño el size de las imágenes Sí bueno hecho todo esto no me queda más que ejecutar fíjense que esto es parecido a lo que nos mostraba cola van a ver aquí cada una de las líneas que hacen al entrenamiento y me dice que los resultados del entrenamiento lo va a poner dentro de rams classify Ya lo vamos a ver bien ahí terminó el entrenamiento fíjense que la quiere decir que hemos logrado es de 0.93 6 nada mal acuérdense que estamos manejando una cantidad de imágenes muy chica sí no tenemos una tazas muy grande así que me parece que es muy buena clase pero ahora vamos a ir a esta carpeta que señala aquí rams clasify train bien aquí tenemos la carpeta runs que referenciamos recién Vamos a entrar a ella tenemos classify y dentro de ella tenemos 30 estas carpetas se crean la primera vez que yo entreno al modelo y concretamente esta carpeta que se llama train se va a llamar train la primera vez que yo entré al modelo si yo vuelvo a entrenar al modelo y no borre esta carpeta las próximas se van a llamar tren 132 etcétera etcétera y bueno Obviamente que si lo borro voy a apagar la información del entrenamiento anterior no sería lógico con lo cual creo que es una buena recomendación el conservar todas las carpetas bien entramos a aquí tenemos weiss y resulta vamos a empezar por este último archivo si lo abro van a ver que lo que tiene es Ni más ni menos que lo que habíamos visto antes en colap y lo que vimos recién en pantalla el histórico de cómo fue evolucionarlo por cada entrenamiento todas las métricas sí la curva de pérdida y la curva de precisión Es decir para hacer un paralelismo con lo que veníamos trabajando en cola justamente para hacer un paralelismo con lo que veníamos trabajando en cola ustedes recuerdan que en la clase 16 hicimos un código a través del cual estas métricas las graficábamos sí la curva de la pérdida y la curva de la precisión eso es lo que vamos a hacer ahora con un nuevo programa dentro de nuestro entorno de paisan tomando un poquito del código que usamos en cola para justamente aprovecharlo y ver que estamos haciendo más o menos lo mismo tiene una pequeña diferencia pero bueno en principio vamos a ir a lo que hicimos en ese momento en cola Aquí está recuerdan que teníamos un código que lo usamos con Maple lip y teníamos estas curvas de precisión y de pérdida ambos para el conjunto de entrenamiento la información la sacamos en base a la variable histórico que usábamos cuando entrenábamos al modelo esa va a ser la única diferencia que vamos a tener en este caso porque en lugar de tener una variable en la que yo fui guardando los entrenamientos ya lo hizo Yolo y me generó este archivo csv que va a ser la fuente de ingreso de datos es decir en lugar histórico vamos a usar ese archivo csv Así que este mismo código que está aquí prácticamente el mismo vamos a usarlo desde python creando un nuevo programa a ese nuevo programa le vamos a poner metrix punto aquí tenemos el código en principio lo que tengo que hacer es empezar por importar pandas y acuérdense que aquí ya no estamos en cola cada vez que quiero importar algo tengo que tenerlo justamente incorporado dentro del proyecto Por lo cual vamos a hacer el mismo proceso que hicimos antes para ultralitiks y para nampai vamos a hacerlo ahora para pandas y vamos a files settings y ya estamos aquí y vamos a hacer clic aquí en el más para empezar a importar la primer librería aquí está y luego pandas bastante rápido a las dos le doy Ok y ya tengo instaladas las librerías que me hacían falta bien aquí lo que vamos a hacer es crear un Data frame al igual que lo hacíamos con cola a través de pandas Rift ssv y tomando el lugar del cual está justamente este archivo en realidad es 30 Aquí tengo 321 porque lo había utilizado antes es esta ruta que está aquí fíjense Perdón aquí en rams classify train y resulta este punto implica que justamente el directorio está aquí dentro no hace falta poner la ruta completa si la quieren poner completa no hay ningún problema bien luego voy a crear una matriz Perdón los y una matriz acc lo mismo que hacía o que hicimos justamente en el colar y vamos a tomar de results la columna traen barra loss y de results la columna metrix si esta es la de pérdida Y esta es la depresión Por qué tienen Estos espacios que están acá adelante porque en el ccv está puesto de ese modo así el nombre del campo y si no lo pone así probablemente no lo reconozcan bien aquí el nombre es todo esto lo mismo que aquí por eso la idea es poner todo el contenido que está entre cada una de las comas que separan una columna de la otra luego el resto del código es Exactamente igual Exactamente igual al que teníamos en el ejercicio 16 solamente que lo que cambió aquí es que en lugar de tener cinco entrenamientos tengo 20 entrenamientos Por lo cual el rango para graficar ahora es de 20 bien habiendo hecho todo esto lo guardamos y lo probamos y aquí tengo justamente el gráfico con las dos curvas la de precisión y la de arriba hacia abajo como debe ser y la de precisión hacia arriba como debe ser bien vamos a mirar una cosita acá muy importante fíjense dónde termina el entrenamiento pero fíjense que donde terminan no fue el punto de precisión más alto el punto de presión más alto estuvo en el entrenamiento número 15 vamos a ver eso ahora volvemos al archivo csv que Les recomiendo si lo quieren lo pueden abrir con Excel para que sea más fácil de visualizarlo pero aquí vemos que el entrenamiento 15 tenemos el altura así más alto 095 714 en el 14 tenemos 0 95 pero después baja a 0,93 571 y se mantiene así hasta el último caso esto nos va a llevar a lo que vamos a ver a continuación si vuelvo a la carpeta clasificador rams clasify training está toda la información del entrenamiento donde tomamos recién esta resolución csv veo que tengo una carpeta Waze la abrimos y tengo dos archivos de tipo PT Qué son los PT son los modelos que desarrollamos siempre la extensión Pero por qué me muestra ves y Last porque justamente puede pasar lo que nos pasó aquí el último no es el mejor entonces este las representa el último modelo es decir el que se obtuvo con el último entrenamiento Y ves me da el modelo con la más alta predicción aquí podemos tomar dos posturas puedo hacer que tome vez pensando que es Obviamente el que tiene mejor score razones están de más pero las es el que tuvo el mejor entrenamiento y probablemente la cantidad de entrenamientos haga que tenga una predicción mejor Más allá de que el score no lo dijera sí pero a mayor cantidad de entrenamientos muchas veces también es algo conveniente a tener combustión las dos opciones en este caso están al alcance de la mano no siempre va a ser así probablemente la las sea la que tenga la mayor cantidad de entrenamientos y la de mayor precisión en este caso Está bueno el ejemplo porque justamente se da la lógica de porque hay un vez y porque hay un Last nosotros para este ejercicio Pero si ustedes quieren tomar el vez También pueden hacerlo Bueno ya tenemos todos los elementos necesarios en condiciones y vamos a crear nuestro primer programa para predecir para usar el modelo y ver si funciona bien o no con lo cual voy a ir de nuevo a a para crear un nuevo archivo de python que le voy a poner predict si el punto No ponerlo porque ya le estoy especificando que es un archivo de python bien aquí tenemos el código pero lo vamos a empezar a ver en la segunda parte de esta clase Así que vamos a la segunda parte aquí terminamos con la primera parte de esta clase nos vemos en la segunda parte  