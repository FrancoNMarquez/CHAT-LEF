 Titulo: Clase20 (parte 1) Curso Inteligencia Artificial 
 URL https://youtu.be/TnLbGAKQGyE  
 1772 segundos de duracion 
 Hola bienvenidos al curso de Inteligencia artificial de ifes Los invito a empezar con nuestra clase número 20   Hola a todos Bienvenidos a la clase número 20 del curso de Inteligencia artificial de ifes seguimos en el módulo de learning seguimos en el módulo también de redes neuronales convolucionales y en el contexto de el uso de redes para entrenadas particularmente y hoy en la clase pasada usamos hielo para abordar un problema de clasificación de objetos en el día de hoy en esta clase número 20 Vamos a abordar un problema con hielo también de detección de objetos este tema lo vamos a abordar en Dos clases durante esta clase vamos a ver aquellas cuestiones que tienen que ver con el uso del Data set con el cual fue entrenado originalmente Yolo que es el coco de datasep que ya lo mencionamos antes vamos a ver toda la cantidad de opciones que tenemos a partir de eso y en la clase que viene vamos a usar con este mismo objetivo Yolo para detección de objetos pero con un Data set propio y vamos a entrenar a Yolo con nuestro propio como recién dijimos vamos a recorrer muchas variantes con iolo desde las más básicas como esta que está aquí por ejemplo vamos a ejecutarla donde vamos a ver el reconocimiento de objetos de una colección de imágenes y vamos a imprimir los resultados por pantalla en todos los casos lo que vimos es identificación de objetos que están encuadrados entre los 80 objetos que reconoce automáticamente Yolo gracias al dataset coco también vamos a ver algo un poco más avanzado como esto que está aquí en donde hemos hecho una detección de objetos a partir de un vídeo que tomamos como input y también lo vamos a hacer con streaming tomando como input la detección que podemos ver a partir de una imagen capturada con la cámara de nuestro propio computador Así que dicho Todo esto empecemos con cada uno de estos pasos que nos van a llevar a desarrollar cada una de estas variantes en siete programas diferentes dentro del mismo contexto del proyecto que tenemos que crear como Primer paso para empezar con todo esto así que vamos con eso Bueno como ya mencionamos antes Vamos a continuar trabajando con Yolo B8 solamente que en el caso de la clase anterior lo hicimos para un problema de clasificación y en este caso lo vamos a hacer para un problema de detección por lo tanto me vengo aquí al menú donde están las tasas que son tipo de actividades que se pueden hacer con hielo y voy a seleccionar la opción de texto bien al hacerlo ingreso a esta página y veo Cuáles son todos los modelos que existen para un problema de detección acuérdense que la n es de Nano que es el módulo modelo Perdón más chiquito y x es el modelo más grande sí acuérdense que el más chico Por lo general es más liviano pero menos preciso Aunque más veloz y obviamente el más grande siempre es el más voluminoso el más grande El más preciso pero siempre también el menos así que bueno vamos a elegir el Nano que es el más liviano y luego vamos a bajar el más grande bueno allí terminó la descarga habrán podido comprobar la enorme diferencia de tiempo que hay entre Descargar el modelo nado del modelo x y también lo vamos a poder contratar cuando vayamos ahora a la zona de descargas viendo el tamaño de archivo que tiene uno y otro Aquí están los dos archivos obviamente en la no tiene 6.382 kv y el otro tiene 133.160 grados Bueno creo que no hacen falta más pruebas para poder diferenciar uno de otro Así que vamos al siguiente paso aquí la sección de Tech a la cual he recurrido para la sección models y bajar estos modelos Tengo otras secciones también que las puedo ir descubriendo subida hacia abajo y llego a la sección predique que es un código que nos muestra muy básico para hacer una predicción muy básica también y es una de las primeras herramientas que vamos a usar para hacer nuestro primer programa justamente usando la posibilidad de detectar objetos a través de a continuación vamos a crear la carpeta para nuestro proyecto a la cual le vamos a poner detección creada la carpeta vamos a crear nuestro proyecto Recuerden que como siempre yo tengo el proyecto ya realizado y Por ende abierto con lo cual vengo acá y Busco al igual que como hicimos la clase pasada la carpeta detección que acabamos de crear y simplemente haciendo eso le doy clic y se crea el proyecto recuerden lo que dijimos la clase pasada también que voy a crear este proyecto en una nueva ventana para no cerrar la ventana del proyecto terminado que siempre lo tengo como referencia acá aparece un programa Main punto Pay que siempre crea en cada vez que crea un proyecto nuevo con lo cual este no voy a usar Este programa directamente así que lo voy a eliminar para así dar lugar a crear mi primer programa que le voy a llamar rama de python por supuesto detección como dijimos antes vamos a crear Este primer programa con el código que vimos recién en la página de ioloques un programa muy básico pero nos va a empezar a dar como una primera base para empezar a hacer detecciones de objetos a través de Yolo vamos entonces al sitio de Yolo copiamos este código y lo pegamos en nuestro primer programa como Bien bien aquí aparece esta librería ultralitiks marcándome como que no existe con lo cual recuerden lo que hicimos la clase pasada tengo que cargarla al proyecto a través de settings luego voy aquí a project detection y project interpreter genial más buscaba bueno y ya está instalada entonces allí nuestra carpeta con lo cual lo que tendríamos que hacer ahora es darle Ok y continuar y empezar a ejecutar Este programa que tenemos aquí aquí tenemos en principio el uso de nuestro modelo está usando el n acá el Nano nosotros vamos a usar obviamente las dos opciones para poder verlas si a lo largo de toda esta práctica esto que está aquí lo vamos a quitar Sí y luego vamos a predecir O sea la predicción con este modelo que estamos creando gracias a iolo con una imagen Que obviamente no va a ser esta Va a ser otra imagen que vamos a buscar nosotros qué tenemos que hacer en principio bajamos los dos modelos de Yolo el n y el X esos dos lo tenemos que poner dentro de la carpeta detección y además a través del campus virtual ustedes tienen unas carpetas que justamente vamos a usar en esta práctica algunas con imágenes y otras con videos todo eso también lo tenemos que guardar dentro de la carpeta de detección y como hicimos la clase pasada todo eso adentro a la vez de una carpeta que le vamos a poner datos vamos por ello acá tenemos los dos modelos de ídolo y lo vamos a llevar aquí a la carpeta de detección Bueno ahora vamos a crear acá una carpeta datos como dijimos antes donde vamos a colocar los datos que nos vamos a traer desde el campo virtual en el campo virtual tenemos estas tres carpetas también aparecen los archivos de hielo que siempre como dije antes los voy a poner a través del Campus Pero la idea que lo bajemos como lo bajamos recién Y de esa manera usted siempre van a poder bajar el que quieran más allá de que yo lo suba también en el campo virtual o no así que me llevo estos archivos a la carpeta detección y dentro de la carpeta de dirección la carpeta datos y ahí tengo las tres carpetas con material que vamos a usar a lo largo de esta clase cuando vuelvo a Paisa a mi proyecto veo que todos los cambios que hice por fuera desde el explorador de Windows también impactan obviamente aquí en explorador de Paisa veo los dos iolo el Nano y el x y veo también la carpeta datos que tiene adentro la subcarpitas imágenes vídeos y videos largos con la primera que vamos a empezar a trabajar es con imágenes es decir que vamos a abrir aquí y justamente aquí Veo todas las imágenes con las cuales vamos a empezar a trabajar los primeros programas de este proyecto la primera imagen con la cual vamos a trabajar es esta que está aquí arriba calle día lo vamos a hacer doble clic Y esto es importante para que ustedes puedan visualizar la imagen sobre la cual vamos a hacer la detección de objetos dado que en una primera instancia en los programas más básicos nos vamos a el resultado de esta detección sobre la misma imagen sino que la vamos a ver de modo texto en la sección de la terminal bien ya vamos a entender a qué me refiero pero esta es la imagen sobre la cual vamos a trabajar la cerramos vamos a reemplazar esta imagen que está aquí que es la que estaba colocada recuerdan cuando trajimos este código desde el sitio de Yolo por nuestra imagen calle día punto jpg con la ruta completa datos imágenes calledía punto recuerden cuando ponemos la ruta poner el punto adelante toda esa expresión tanto entender que todo este contenido está dentro de nuestra estructura de carpetas de nuestro proyecto si dentro de la carpeta detección bien ya está todo dado para programar nuestro programa Así que vamos a ello Antes que nada un tema importante que tiene que ver con este entorno de trabajo aquí arriba no siempre va a aparecer el nombre del archivo que queremos ejecutar fíjense que aquí aparece más porque este proyecto nació con un único programa llamado Main Entonces yo ejecuto Esto me va a decir que más no existe Es decir porque obviamente Porque yo lo estoy viendo que ejecute este archivo y este archivo no existe una manera muy práctica de hacer esto y no complicarse demasiado las cuestiones antes que poner el nombre concretamente el programa quiero ejecutar puedo poner la opción file Y eso se adapta al archivo que tengo abierto con eso siempre voy a estar diciéndole quiero ejecutar este archivo que tengo abierto en este momento bien lo ejecutamos un detalle no menor porque les va a pasar y no van a entender Qué pasa así que bueno está bueno que nos aparezca ahora para poder este alertarlos de ese problema y ver cómo solucionar vamos con nuestro programa Bueno fíjense lo que aparece aquí en principio obviamente como les comenté no me parece la imagen con las detecciones sobre marcadas sobre la propia imagen sino que aparece en la sección terminal que es esta zona de aquí abajo las referencias de modo texto me dice que ha detectado sobre la imagen calledía que tiene este 6 si esas dimensiones 11 personas 5 autos y cinco semáforos en este tiempo Bueno eso es importante para que ustedes entiendan que Con este código el tipo de información por ahora que vamos a recibir es esa vamos a pasar otros programas como dije antes que puedan hacer predicciones más avanzadas más logradas y visualmente más fáciles de Identificar y reconocer Bueno aquí le he hecho algunos cambios al programa poniéndole comentarios en castellano para exceptuar los comentarios que ya vienen de propio sitio de ídolo y lo que vamos a poner aquí en principio es un print de results Sub Zero punto boxing para que para que puedan ver la información que se generan con las detecciones Sí qué quiero decir con esto la información que vimos recién tiene que ver con una contabilidad de qué tipo de objetos y cuántos objetos de esos encontró 11 personas 5 autos y cinco semáforos la información que me va a dar ahora es mucho más completa porque me va a decir dónde están ubicados en el contexto de la imagen cada una de esos objetos que detectó sí así que vamos a ejecutar nuevamente el programa ahora con este agregado y miren lo que me aparece en principio de los boxes en formatos de tensor Cuántas apariciones de esta tengo en este caso tantas como objetos ha detectado 11 personas más cinco autos más cinco semáforos tenemos 21 objetos detectados y la cuenta de estos elementos que están aquí tensores que están aquí son justamente 21 Qué información tiene cada tensor en principio fíjense que tienen uno dos tres cuatro primeros elementos que son las coordenadas sí vértice superior izquierdo vértice inferior derecho lo que sigue es el nivel de confianza nivel de confianza es digamos Cuánta seguridad tiene el predictor en este caso de que ese objeto que ha detectado esa categoría la que corresponde qué categoría lo que sigue en continuación es el número de categoría Sí el 2 es un auto el 0 que es el ejemplo que sigue es una persona y el 9 es una señal de tránsito o una una de un semáforo sí esto después lo vamos a ver bien porque así bueno porque sé que el 2 es tal cosa Barceló tal Pero bueno estos son los códigos de Coco Sí de la taza de coco después lo tengan como referencia Pero bueno aquí ha detectado tres tipos de elementos y en cada caso me da repito las cuatro coordenadas el nivel de confianza aquí me dice que el nivel de confianza de la primera detección de objeto que es este un auto es del 90.97% y el valor con la clase es la clase número 2 que corresponde en el que sigue al detecta una persona porque es el valor cero Más allá de que lo pone con todos estos decimales en realidad el valor es un valor entero sí pero bueno lo expresa de esta manera por la característica del tensor y la confianza en ese caso es inferior es de 71.28 por ciento en el caso de lo siguiente que es una señal de tránsito una luz de tránsito que tiene un semáforo la confianza es aún inferior del 66% en la que sigue es inferior bueno fíjense que el nivel de confianza es totalmente variable respecto de cada una de las detecciones bueno Esto es importante porque más adelante nosotros vamos a empezar a usar esta información cuando querramos usar algunos complementos que tiene chu que todavía no lo han usado usamos la clase pasada ahora también lo vamos a volver a usar y que me permiten hacer algunas cuestiones como marcar las detecciones por mi cuenta y no que lo haga Yolo justamente con su modelo bien a continuación como dijimos antes vamos a crear otro programa para seguir avanzando en opciones que nos ofrece la detección de objetos con yolos con lo cual tengo aquí voy a crear otro python file detección 2 con el siguiente código que vamos a pegarlo y empezar a explicar nosotros recién lo que hicimos fue detectar una imagen escribiendo literalmente aquí el nombre de la imagen vamos a buscar hacer algo que sea más Dinámico que pueda tomarme todas y cada una de las imágenes de una carpeta y que yo no tenga que estar escribiendo una por una sino que el código solo lo vaya capturando ofreciéndoselo al predictor y que haga la predicción lo imprima y seguimos con la siguiente imagen hasta llegar a la última las imágenes van a ser de la carpeta imágenes que está dentro de datos Y son toda esta lista de imágenes que está aquí sí calle día calle noche electrónica esquí fútbol living mujer prerrogato 1 perro gato 2 y vegetales bien en todos los casos lo vamos a hacer con el modelo Nano nada más chico y el código lo voy a ejecutar haciendo uso de la librería Us que ya la hemos usado en este caso lo que voy a hacer es Establecer un folder pack que va a ser datos imágenes de base y luego lo que voy a hacer va a ser crear una variable y mgs de array que pretendo que a través de listir sobre folder path me traiga todo listado de archivos que hay dentro del folder es decir dentro de datos imágenes una vez que tenga acá en imgs Ni más ni menos que esta lista de archivos que está aquí la voy a recorrer y voy a ir haciendo predicciones con cada una de ellas sí es decir results de model Y en lugar de poner aquí un valor fijo voy a hacer una ruta a través de path joint sí a conocer que no me permite digamos combinar distintas partes para armar una única ruta en este caso el folder path que es datos imágenes y perdón img que es todas y cada uno de los nombres de archivos que están dentro de esa carpeta bueno aclarado esto pasamos a ejecutar Este programa acuérdense que con el file por lo que explicábamos recién y vamos a ver que ahora nos vamos a tener una predicción sino que vamos a tener tantas predicciones como archivos hay dentro de la carpeta imágenes bien Allí están todas levantamos un poquito aquí la terminal y vemos la primera que ya teníamos de antes 11 personas cinco autos cinco semáforos luego la siguiente en calle noche dos personas cinco autos bueno todas y cada una de las especificaciones de cada caso perro gato un gato un perro gato dos un gato un perro y en el caso de vegetales ha detectado tres zanahorias bien vamos entonces ahora a ir hacia un pasito más avanzado a través de propósitos que vamos a volcar en el siguiente programa detection 3 bien Vamos a crear entonces el archivo nuevo detección 3 como habíamos dicho recién como en el siguiente código Cuál es el propósito ahora vamos a hacer lo mismo que hicimos en detección 2 es decir detectar todas y cada una de las imágenes que están dentro de la carpeta imágenes pero me quiero guardar quiero guardar cada una de las predicciones en una imagen que esté alojada una carpeta para poder visualizar las Tantas veces como yo quiera y además y además verlas durante la ejecución del programa sí bien la primer parte de este programa que tenemos aquí es Exactamente igual a la detección 2 Sí todo esto que está aquí hasta el armado del source Exactamente igual Sí aquí el Surf no lo armamos se lo poníamos directamente hacia el sur sería esta parte de aquí el origen digamos de lo que va a predecir a través de resolución ahora lo vamos a hacer A través de model predict siempre con Yolo es decir que este source que yo antes ponía aquí directamente se lo daba al model ahora lo voy a poner dentro de una variable y lo voy a aplicar con model Pretty Modern Credit me ofrece lo siguiente en principio que le ponga el Surf es decir cuál es la imagen sobre la cual quiero hacer la predicción o la detección de objetos Sí pero existen cuatro parámetros más y muy importantes en principio 6 que puede ser falso lo que le digo es si quiero que me guarde la imagen con las detecciones en una carpeta o no true quiero que me las guarde con 05 es el índice de confianza yo esto lo puedo fijar es decir si hay una detección de objetos con una confianza inferior al 0,5% creo que lo ignore y si es superior o igual sí obviamente este 05 puede ser el valor que ustedes quieran si ustedes quieren poner algo que sea más exigente pondrán 07 siempre obviamente tienes un valor entre 0 y el uno por supuesto no Entonces esto en este caso le pongo es como un umbral digamos de confianza cero cinco por ciento luego viene 6 text que para que se puede poner en true and Falls para poder guardar las referencias de cada una de las detecciones en modo texto si con las coordenadas que lo que mostramos en el caso anterior que me figuraba a través de la terminal ya no lo voy a ver de ese modo sino que lo puedo recuperar a través de un archivo y verlo todas las veces que quiera porque ustedes saben que lo que está en la terminal lo ven una vez y después desaparece aquí va a quedar conservado al igual que las imágenes o sea que tras la imagen con la detección dibujada y aparte la información en modo texto y finalmente YouTube que puede ser true Falls le estoy indicando si quiero que durante la ejecución del programa me vaya mostrando las detecciones o no obviamente que tanto savetex y show pueden ser true Force Y ustedes con eso hacen lo que les parezca o resulte más conveniente y con nuestro Ford Pero puede tener el valor que ustedes también consideremos conveniente bueno la toda esta explicación no queda más que ahora ejecutarlo allí terminó lo que vamos a hacer ahora es ir a la carpeta donde guarda esta información para poder visualizarlo bien Aquí estoy en la carpeta de detección voy a encontrar ahora por primera vez por haber corrido de esta manera por primera vez una carpeta rams entro a rams y allí voy a encontrar de y dentro de Tech voy a encontrar predica que por primera vez se va a llamar predic a secas y luego va a ser previc 1 2 3 y así sucesivamente guardando cada una de las referencias de las predicciones Tantas veces como ellos ejecute Este programa u otros por supuesto No bien entramos a predict y que me encuentro aquí con las imágenes que recién fuimos visualizando con la computadora pero para poder con las predicciones también y verlas todas las veces que quiera Sí aquí tengo fíjense la primera de ellas con las señales de los semáforos Perdón las personas y los autos la segunda acá detecta una mochila persona Auto la tercera electrónicos el futbolista el living la mujer fíjense aquí el gato del perro el gato y el perro y aquí las zanahorias bien esto por un lado por otra parte tengo una carpeta labels que me guarda la información que yo les comentaba recién es decir un archivo por cada una de las imágenes pero con las referencias de todas y cada una de las coordenadas de cada una de las detecciones de cada imagen Es decir en este caso calle día tiene los 21 elementos que habíamos mencionado hoy que había detectado esta este algoritmo bien entonces tengo esta información dentro de predict las imágenes y dentro las referencias de las coordenadas de cada una de las esto que está aquí cuando me refiero a coordenadas vamos a tomar un elemento cualquiera vamos a agrandar un poquito esta imagen aquí por ejemplo esta trastic light sí un poquito más claro Sí esto tiene un vértice superior izquierdo y un vértice inferior derecho que está conformado por coordenadas Cómo le digo Cuál es la línea de marcaje de esto que llaman bonding Box Sí para que ya lo vayamos nombrando como se debe Sí con una una caja de recuadro del objeto Cómo se determina dónde empieza cómo son la forma de marcar ese cuadrado a través de este vértice y a través de este vértice es la manera de indicar cómo está conformado el dibujo que enmarca el objeto detectado para cerrar esta primer parte de la clase vamos a observar un pequeño detalle Qué modelo de Yolo utilicé yo para hacer la predicción en detección 3 a diferencia del usado en detección 2 detección 2 use el Nano Qué pasaría si yo cambiase Este modelo es si vamos a comentar esta línea y habilitamos la de arriba es decir qué pasa si uso el modelo Nano también en detección tres puntos lo primero que seguramente vamos a presumir Sin temor a equivocarnos es que va a ser más rápido el proceso pero Debería ser también menos preciso será menos preciso bueno acá hay una excelente forma de corroborarlo porque lo voy a correr ahora con este otro modelo y me va a quedar otra carpeta de predicciones y voy a poder comparar concretamente visualmente y a través de el archivo de labels las predicciones con el modelo de x y las predicciones con el modelo de Nano y ver cómo nos fue vamos a hacer eso bien terminamos de ejecutar el programa vamos a la carpeta detección de nuestro proyecto y allí tenemos la carpeta runs y dentro de runs detecto pero ahora dentro de como les dije antes ya no tengo una sola carpeta predic sino que tengo una nueva carpeta Play 2 en este caso Entonces vamos a ir a elegir una imagen por ejemplo esta perro y gato vamos a dejar abierta y vamos a volver un poquito hacia atrás vamos a ir a proyectos y vamos a elegir la misma imagen Bueno fíjense aquí comparando ambas imágenes es un ejemplo muy claro del nivel de predicción de un modelo de otro en el modelo x detecto El perro y el gato el modelo Nano solamente el perro es como que el gato estuviera fundido dentro del perro y no lo ha alcanzado a detectar vamos a ver otro ejemplo más Aquí tengo la imagen de la mujer fíjense que en el modelo Nano no detecta la cartera y en el modelo x si la detecta aquí estamos con calle día que es la primera imagen que usamos Bueno ya de un solo vistazo se dan cuenta ustedes que aquí la cantidad de personas que detecta en esta que usa el modelo x respecto a la que usa el modelo Nano Bueno hay una diferencia más que apreciable la cantidad de semáforos fíjense que es uno solo aquí son dos bueno está más que claro yo creo que no no habría que poder saber si la que está a la izquierda o a la derecha Cuál es en virtud de qué carpeta lo abrí Ya solo con el hecho de verla ya me da claramente una manifestación de Cuál es la que usó el modelo x y cuál es la que usa el mundo bueno con esta experiencia para poder comparar modelos y puedan entender mejor lo que es en términos de eficiencia un modelo y otro Recuerden que estamos en los extremos hemos elegido el menos preciso y el más preciso y el medio hay otra variante pero bueno es una buena idea para poder justamente verlo de la manera más gráfica posible las diferencias entre modelos decía que con este último tema estamos cerrando esta primer parte de la clase Así que nos vemos en la siguiente parte de esta clase aquí terminamos con la primera parte de esta clase nos vemos en la segunda parte 