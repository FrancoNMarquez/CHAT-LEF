 Titulo: Clase24 (parte 1) Curso de Inteligencia Artificial 
 URL https://youtu.be/Eyo9M8LH01s  
 2146 segundos de duracion 
 Hola bienvenidos al curso de Inteligencia artificial de ifes Los invito a empezar con nuestra clase número  24 Hola a todos Bienvenidos a la clase número 24 del curso de Inteligencia artificial de El ifes eh Esta es la última clase de redes neuronales convolucionales donde vamos a ver dos temas muy importantes como todos los que hemos visto antes en este caso en la primer parte de esta clase vamos a ver el tema de tracking y en la segunda parte de esta clase vamos a ver Cómo identificar texto desde una imagen así que bueno vamos a empezar con el primer tema de ellos que es el tracking y vamos a recurrir a lo que vimos algunas clases atrás cuando vimos el tema de la detección de objetos y recordarán esta imagen donde estaban en un centro comercial y detectamos a las personas donde ponía digamos el dato de de la persona en este caso de la clase que identificaba que eran personas y en otros casos detectaba también en mochilas y o carteras Bueno aquí uno puede presumir si entiende que el concepto de tracking es el seguimiento de un objeto que eso que estamos viendo aquí es un tracking en realidad no es un tracking porque en realidad el tracking implica no solamente el estar detectando el objeto sino que ese objeto se ha identificado de manera única y diferenciándose claramente del resto de los elementos que aparecen en la imaje vamos a poner un poquito más de Claridad sobre el concepto de tracking concretamente lo que tenemos aquí y siguiendo Este ejemplo que tomamos recién es la detección de un grupo de personas vamos a tomar esta persona que está aquí y en la siguiente imagen vemos Que seguimos identificando a la misma persona esto a la vista parece un tracking pero no es un tracking desde el punto de vista de la información que genera este algoritmo en esta instancia Yo tengo un grupo de detecciones en la cual tengo la detección de esta persona en la siguiente instancia siguiente frame tengo detección de todo un grupo de personas entre las cuales veo o identifico la misma persona bien Esto es así pero no hay ninguna relación entre la persona del frame anterior y el frame siguiente Por más que nosotros visualmente veamos que se trata de la misma persona si yo quisiese identificar a esa persona con un número supongamos número 15 no está identificado En el frame anterior con 15 y en el siguiente frame con 15 esto de esto se trata del tracking y sobre esto es sobre lo cual vamos a trabajar en la primer parte de esta clase el tracking lo vamos a manejar con Yolo es uno de los modelos o el tipo de actividades que se lleva a cabo Yolo como vimos cementación como vimos clasificación como vimos detección bien aquí tenemos el espacio donde se explica el sitio oficial de ultralytics por Yolo el multi tracking voy a bajar un poquito hasta aquí y voy a ver que acá tengo un ejemplo de un código que si ustedes lo lo llevan a su proyecto lo van a poder ejecutar sin guardar demasiada diferencia respecto de lo que nosotros hicimos antes en la detección de hecho el modelo que se usa es el mismo que la detección solamente que en este caso el método sería Track y luego utilizo el anotate frame con el método plot para justamente detectar y dibujar el recuadro en cada objeto nosotros vamos a hacer algo un poquito diferente en este caso porque vamos a buscar por primera vez generar ese recuadro por nuestra cuenta y vamos a aplicar algunas cuestiones que después van a concluir en el proyecto cuando cerremos el proceso de tracking completo para hacer como empezamos Siempre vamos a crear un proyecto nuevo y vamos a tomar todos los archivos que yo les dejo a través del campus virtual que son todos estos que estoy marcando aquí y como hacemos habitualmente creo una carpeta que le voy a poner tracking y voy a copiar dentro de esa carpeta todos estos archivos bien ahí están copiados todos los archivos entre ellos hay archivos vinculados a datos sí como estos 2 mp4 en este caso no he hecho la carpeta la famosa carpeta datos Pero bueno este vamos a dejarlo así por ahora y luego los archivos los tres pun p que van a ser parte de este proyecto Así que vamos a crear el proyecto vamos con todos estos archivos que están dentro como siempre diciéndole que quiero crear un proyecto sobre una carpeta que ya tiene archivos y que quiero usar Su contenido para que forme parte de proyecto Bien acá estamos con el proyecto creado ya y vamos a empezar a trabajar con el primer programa que es tracking punp bueno aquí empezamos por importar las librerías que venimos usando en los últimos proyectos cb2 y ultr litic para Yolo Y también vamos a usar math y Random que no hace falta incorporarlas desde lo que venimos habitualmente utilizando file settings sí Ya están incorporadas dentro de El p bien lo que a continuación hacemos Es tomar un video people mp4 que es un grupo de personas que están en un centro comercial tomadas desde arriba y Eh bueno creamos el modelo con el modelo Nano de Yolo v8 sí obviamente esto si ustedes quieren Lo pueden cambiar al modelo X o el modelo que ustedes quieran como ya dijimos antes no vamos a dibujar los bonding Box en este caso nosotros los recuadros y no tomando lo que hace naturalmente iolo para ese caso también vamos a agregar un pequeño detalle important an un detalle de color justamente que es que vamos a tratar de que cada bonding Box sea de un color diferente ustedes recordarán inclusive en la imagen que misen que todos los bonding Box son los mismos en tanto y en cuanto representan la misma clase Ahora vamos a dibujar bonding box de diferentes colores sin importar que sea la misma clase u otra para ello voy a poner este código que está acá que es crear una matriz de colores con lo cual voy a generar a través de un Run int valores que van de 0 a 55 para el primer color para el segundo y para el tercero y con un for digo que lo quiero hacer 100 veces así que voy a tener 100 combinaciones de colores diferentes obviamente puede hacer 100 o el número que ustedes quieran en este caso hemos elegido 100 para tener una idea aproximada luego dado que e bueno con esto que vamos a hacer podemos detectar cualquier tipo de objeto y queremos rescatar ar eh su su etiqueta vamos a crear justamente una Ray con los nombres de los 80 objetos de coco y hice esto que he puesto aquí a continuación empezamos con el wtr que venimos usando regularmente donde hago un Red ox Access y frame de El C R luego voy a tomar todas las detecciones pero con el método Track sí en donde le voy a poner que la tiene que tomar the frame decir de la captura de pantalla y con una confianza de El 50% una vez que tengo eso como siempre tomo todos los resultados de las detecciones y empiezo a recorrerlas y dentro de esa recorrida voy a tomar los datos de result boxis Data Y eso con el método tulis lo voy a convertir en una lista y lo voy a poner dentro de esta variable r es decir por cada detección de este frame Sr va a devolverme a mí siete valores y Por ende en la siguiente línea igualo justamente esa variable r a siete otras variables que recogen esos valores en principio las cuatro coordenadas el ID el score el nivel de confianza y la clase detectada todos ellos salvo el score son valores de tipo texto Por ende lo voy a tener que convertir a partir de int a un valor de tipo entero a continuación Quiero obtener el nombre de la clase Por ende lo que voy a hacer es justamente con el valor del Class ID voy a tomar desde la matriz Class names ese su índice y Por ende voy a obtener el nombre de la clase es decir que si el ID detectado es cero voy a hacer el elemento cero de la matriz Class names y voy a obtener el nombre si veo la matriz Class name justamente el elemento cero es person y Por ende esta variable Class name va a tener el texto person a continuación voy a mostrar el nivel de score es el nivel de confianza en la predicción y a través de matell voy a redondear y mostrarlo a través de una variable conf con ello preparo un texto en el cual lo voy a poner en una variable Label poniendo por un lado el nombre de la clase detectada y el nivel de confianza expresado del modo que calculamos recién y con ello voy a crear toda la estructura para empezar a hacer lo que dijimos recién el rectángulo con un color diferente en cada caso y el texto arriba personalizado a como lo queremos nosotros a continuación voy a dibujar el rectángulo como dijimos anteriormente con un color diferente de acuerdo a cada detección sin importar que sea el mismo objeto o no la misma Elmo tipo de clase o no y lo voy a hacer con rectangle sobre el frame con las coordenadas detectadas Sí en cada uno de los results en este caso x1 y1 marca como siempre el vértice superior izquierdo y x2 y 2 el vértice inferior derecho luego en el caso de los colores siempre le poníamos un color fijo en este caso lo voy a armar con la siguiente lógica en principio voy a tomar el valor ID para que eh vea que cada elemento es un elemento diferente y voy a operar justamente en virtud de la cantidad de colores que tiene la la matriz colors sí que dijimos que tiene 100 y voy a ir tratando de identificar de esta manera una construcción que haga que cada Ed va a estar identificado con un color diferente y una vez que haga eso justamente voy a poner esto en el lugar donde antes Yo ponía un valor fijo y con tres como siempre específico bueno el nivel de de de ancho digamos de ese rectángulo m bien luego tenemos otra cuestión nueva que creo que es importante que es calcular el largo del texto para qué Porque después yo voy a poner un rectángulo que va a ser el fondo en el cual va a descansar todo este texto que texto el el nombre de la clase y el nivel de confianza eso tiene un largo lo calculo aquí con la función de cb2 get tch size Sí y luego pongo ese valor en una variable t size Por ende en el próximo paso voy a poner dentro de es2 que es otra variable que creo justamente las coordenadas que debería tener ese futuro rectángulo que va a ser el fondo del texto en virtud del largo del texto a colocar bien y en la siguiente línea dibujo justamente ese rectángulo en donde digo que sobre el frame voy a poner x1 y1 pero la segunda coordenada de ese rectángulo va a ser C2 C2 es esto que he calculado aquí a partir de el largo detectado en esta otra línea de aquí luego le pongo como siempre men1 para decir que es un rectángulo que tiene que estar relleno y Pongo aquí el tipo de línea que quiero que tenga y finalmente el texto es decir pongo el put text con el frame sobre el frame perdón el Label que es el texto que tengo que Mostrar que es esto que está aquí la clase y el nivel de confianza y las coordenadas x1 y 1 sí -2 le pongo justamente para que no quede muy encimado en el principio del rectángulo y el resto de la información que venimos usando habitualmente el color bueno el ancho el tipo de de texto digamos etcétera etca el tipo de fuente una vez que tengo armado todo esto bueno no me queda más que hacer el show que hacemos siempre y el White Ke con 27 para si yo quiero cortar el video antes de tiempo así que bueno he expresado toda la lógica de este programa no nos queda más que usarlo ejecutarlo y Ver el resultado ven que todas las personas tienen un color diferente y aparece arriba del recuadro en el mismo color que el recuadro el tipo de clase y el nivel de confianza fíjense dat muy importante que acá No hay tracking y lo veo del color fíjense que el color o los colores van cambiando conforme van pasando los frames sí es decir vamos a hacer una persona acá esta persona tiene un color luego otro ven luego otro luego otro eso me da la Pauta de que AC hay una detección pero no hay un tracking es decir cada frame es una instancia totalmente nueva y esa persona que voy siguiendo para el siguiente de frame es una persona que no tiene nada que ver con la anterior Por más que nosotros visualmente pensemos que es laa persona bien habiendo terminado esto ustedes tendrán la sensación de decir Bueno pero estamos teniendo el tracking aquí en realidad todavía no eh o mejor dicho tenemos una parte pero nos falta otra parte muy importante lo que hemos logrado aquí es utilizar la función tracking de iolo que tiene el mismo modelo que la que usamos para detectar pero me va a tirar otra información para que yo con otro programa pueda lograr el tracking de la forma que yo se lo expliqué a ustedes recién si hemos logrado que no lo habíamos hecho antes hacer el recuadro el bounding box por nuestra cuenta con la información que me da la detección y también poder lograr este efecto de poder este poner de un color diferente que ya lo vamos a usar también en el tracking a las diferentes personas solamente que el color va cambiando como decía recién y e finalmente Bueno este truco de poder calcular la longitud del rectángulo en virtud de la longitud del texto Bueno qué es lo que vamos a hacer ahora vamos a buscar un programa que es público que se llama sort Pi y que me va justamente a dar lo que me está faltando hasta ahora para junto con la función Tracker de Yolo poder hacer definitivamente el tracking que nos propusimos sobre la imagen que vimos recién de esta gente que está caminando sobre el centro comercial Así que primero vamos a ir a el github que comparte este programa sort pii bien aquí estamos en el github de sort pii con lo cual fíjense que aquí está todo el código de sorp y lo puedo bajar directamente desde aquí o bien copiar y pegar lo concretos que no hace falta nada de eso porque yo se los puse dentro de los archivos que iban en el campo virtual Y ustedes ya tienen ese archivo dentro del proyecto ven aquí está dentro del proyecto Sí bueno Esto lo vamos a usar para poder justamente hacer la parte que nos está faltando no vamos a meternos en el código de sorpi quien lo quiera consultar por supuesto puede ir al github Pero bueno es algo que está para ser utilizado como si fuese una librería La diferencia es que est librería yo puedo ver el código y si quisiese en algún momento podría eh corregir algo o cambiar algo en principio no es el propósito de esta clase por ahora sino usar eso Como si fuese una librería cerrada sí o una caja negra Más allá de que lo tenemos que traer a nuestro proyecto porque si no no lo podemos usar bien con lo cual ahora vamos a ir a el programa tracking coating people y le he puesto entre paréntesis hundir Por qué Porque ustedes ven que las personas van en ambas direcciones lo que vamos a hacer aquí es trazar una línea que la cual va a ser la línea que nos va a permitir o a tomamos como referencia para contar si cuánta gente está pasando esa línea pero lo vamos a hacer en una dirección Sí es decir como gente que va en un sentido y lo cuenta pero si va en el otro sentido no lo va a contar con lo cual parecería con por ejemplo un lugar donde yo quiero contar cuánta gente entra y no cuánta gente sale Bueno se puede contar en nas direcciones por supuesto no hay ningún problema pero bueno le vamos a Bucar una lógica un poquito más compleja para que ustedes Tengan algo más parecido a una realidad que puede tener que ver justamente con la o detectar de una manera diferente la cantidad de gente que entra que sale por lo general uno no cuenta ambas cosas salvo ir a ver cuánta gente concurrió pero por lo general se toma un indicador en salida y en entrada y no la suma de ambos Sí bueno con este ejemplo un poquito más complejo ustedes van a poder armar en las en las dos direcciones s si la detección justamente complementando la parte que hacemos una dirección en la otra dirección contraria bien lo primero que vamos a hacer aquí en este caso es determinar en la imagen Cuáles serían los límites para trazar Esa esa recta esa línea que la vamos a dibujar para que sea visible después no hace falta que sea visible pero en principio para poder chequear esto que estamos haciendo lo vamos a hacer visible bien los límites para eso son estos que he puesto aquí es decir que es una coordenada de inicio de una línea y la coordenada de la línea anterior lo vamos a ejecutar antes de terminar de hacerlo para poder justamente entender este concepto de la línea y la línea anterior esta es la línea y esta es la línea anterior entonces fíjense que acá va en cero y yo voy a contar a esta persona porque acá atraviesa la línea anterior y luego va a atravesar la línea definitiva Ahí está pasando y cuando pase este señor va a contar uno ven ahí pasó a uno por qué hago esto de la línea anterior y la línea principal porque es la manera o una de las maneras por lo menos que se me ocurra a mí de poder detectar si la persona va en esta dirección o en la otra cuando la persona vaya en otra dirección no habrá una línea verde del otro lado que me quede registrada para saber que esa persona que está cruzando aquí antes pasó por la línea Verde La idea es que cuando llega la línea roja si pasó por la línea verde la cuenta y si no pasó por la línea verde no la cuenta Cuáles son las personas que no van a pasar en la línea verde las que vienen Como por ejemplo este 53 que viene acá de arriba hacia abajo los que vienen de abajo hacia arriba son los que van a pasar por la línea verde y luego por la línea roja Esa es la idea de esas dos líneas volvemos aquí las coordenadas de esas dos líneas son estas las coordenadas por ahí eh una receta que les puedo dar justamente para trabajar esto es que tomen una captura de un video lo lleven a un editor de de imágenes y puedan justamente teniendo en cuenta las dimensiones sí de del video establecer Cuáles serían las coordenadas del la x y la i de un lado y la x y la i del otro para la línea limits que sería la roja y limit a lim and que sería la verde bien seguimos con lo siguiente que no reviste mucha diferencia respecto de lo que veníamos trabajando porque tenemos el wth la captura del frame de las imágenes el tracking esto que está aquí puntos ofensivos Ya lo vamos a dejar para más adelante y luego Bueno lo mismo que veníamos haciendo hasta este momento que era justamente capturar todos los datos de las detecciones los bonding Box sí de cada una de las detecciones la información de la clase y todo el resto de lo que venía trabajando en el programa que vimos recién Sí tracking punp este de aquí y lo que vamos a hacer a continuación es en principio preguntar si la Class name es persona o sea in una matriz que solamente tiene un elemento person si fuese si hubiese Perdón otros elementos más pondría allí person coma Track coma car coma en este caso me interesa contar personas con lo cual lo que tengo que detectar son personas bien lo que voy a crear aquí es una variable carrent array que justamente la voy a crear con np aray y le voy a pasar cinco valores las cuatro coordenadas y el nivel de confianza en la detección y luego ese ese vector de cinco posiciones lo voy a ir apilando formando de esta manera una matriz en la dete variable que recién dije salteamos si esta línea que está acá y tenía que ver con esto que justamente estoy creando acá un nmt si una matriz vacía que la voy a ir llenando como la voy a ir llenando con cada una de estas líneas Es que voy a tener una matriz Por qué Porque voy a tener varios vectores de cinco posiciones y en cada vector es una detección cuatro coorden y el nivel de confianza sí y así el resto por qué Porque ese es el formato que necesita como entrada s. pii sí Entonces cómo lo hago con npb stack de vertical una pila vertical b stack y lo hago con detections la matriz que ya tengo creada más current array Y dónde lo pongo en detections O sea que tomo la matriz le voy poniendo una fila nueva y la pongo la sobreescribas voy haciendo cada vez sí formando esa pila esa pila va a terminar siendo una matriz de cinco columnas y tantas filas como elementos se haya detectado esta esta captura del video teniendo en claro eso lo que voy a hacer es empezar a usar sorp sorp para utilizarlo en principio lo tengo que hacer es justamente declararlo aquí arriba y decirle que from sort import asterisco o sea que traiga todo el contenido de sort sí lo abrimos el lo recordo recordamos qué es esto que está aquí sí O sea voy a acceder a todas las funciones que tiene soft sí Recuerden que para hacer esto aquí lo hacemos muy fácil porque s está en la misma la misma estructura digamos de dependencia Sí en la misma jerarquía que el resto de los programas si estuviese dentro de una carpeta o algo por el estilo obviamente tenía que ponerlo aquí en el la llamada digamos al programa sí acuérdense que aquí sort no es como ultralytics no es como cb2 que son librerías que yo he incorporado al proyecto sort es un programa que tranquilamente podría ser un programa que lo hubiera programado yo mismo bien entonces aclarado esto lo que voy a hacer justamente con sort es crear una variable Tracker Y esa Tracker la voy a crear a partir de crear una instancia de sort del del método que tiene adentro esa librería sort y le voy a pasar tres parámetros que que tien que ver este Max age es cuánto tiempo va a durar un tracking si ese tracking o ese objeto desapareció de pantalla vamos a suponer yo detecto una persona y en algún momento esa persona sale esa persona sale Y puede volver a entrar a la imagen al recuadro de la imagen Bueno si eso no ocurre antes de los 20 segundos ese número de ID se perdió o sea esa persona era cinco el número cinco quedó liberado para que otra persona nueva que entre a la imagen sea etiquetada como cinco eh min hits es la cantidad de intentos que hace para que esa detección sea eh tomada como verdader decir yo capturo el número cinco en la siguiente imagen supóngase que yo eh No detecto a esa persona en la siguiente secuencia bueno va a ser tres intentos para que siga viva ese siga vivo ese tracking sí es decir Esa persona fue detectada en esta imagen le puso cinco en la siguiente imagen esa persona no importa Por qué Porque se crusa alguien alfrente por lo que fuere porque no no es tan legible eh No es detectada nuevamente con lo cual se pierde hace cinco no hace tres intentos y luego esos tres intentos si efectivamente tres veces no lo pudo detectar ahí sí se libera es cinco como en el caso anterior dijimos que se hubiese salido de pantalla y treshold iou threshold tiene que ver justamente con la veracidad de la del recuadro en virtud de la detección bueno en este caso todos estos parámetros se configuran con el método Sword y creo una var Tracker con esas características aclarado esto voy entonces a Tracker update es decir voy a darle voy a actualizar los datos de sort justamente Con qué con la matriz detections que hablamos recién que dijimos tenía apiladas todas las detecciones de una determinada secuencia bien entonces una vez que tengo esto lo que hago es justamente Llamar update Tracker y esos resultados lo pongo en una variable que se llama results Tracker esa result Tracker va a ser justamente el insumo mío que me va a permitir empezar a trabajar con cada una de esas detecciones y un número de identificación un número de ID bien lo primero que tengo que hacer antes que nada es dibujar la línea para el límite del conteo la línea Roja se acuerdan que vimos recién y luego la línea para establecer la dirección que era la línea verde esto civ Line c l no tiene mucho secreto porque es lo que hablamos recién y lo hace con las coordenadas limits s 0 1 2 3 y lim 0 1 2 3 que es lo que habíamos visto insisto aquí arriba sí Bueno ahora como dijimos recién Perdón dijimos que en Tracker estaban tod los track de todas las detecciones sí Entonces ahora qué hago lo voy a recorrer como antes recorrí las detecciones ahora voy a recorrer los tracking los tracking son las mismas detecciones solamente que ahora tiene un dato más que es el id bien Por eso el result me arroja cinco valores de salida de nuevo las cuatro coordenadas que son exactamente iguales a la que yo le pasé pero le agrega ahora el ID que se creó dentro de Z o sea ahora cada uno de estos recuadros tiene un número y la idea es que ese número conforme ese recuadro vaya avanzando permanezca vinculado a ese recuadro y a esa persona bien como hicimos hoy paso todos los valores que son devueltos por este result de manera String a texto sí o a entero H bien y vuelvo a hacer el mismo jueguito que hice hoy con el tema de los colores porque quiero que justamente Más allá de que cada imagen tenga un número de D diferente tenga también un color diferente entonces calculo justamente en base al ID con la misma lógica que usamos recién el programa tracking un color bien entonces para este ID el color va a ser este uno de los 100 Recuerden que el tema de que sean 100 es una cuestión arbitraria ustedes la pueden determinar como que sean más colores o no bien Entonces luego lo que voy a hacer Voy a dibujar el rectángulo del bonding box s sobre frame con las dos coordenadas x1 y 1 x2 y 2 Con qué color con el color color que es el que acabo de determinar recién o sea el color que está identificado con Sid y un grosor de tres luego voy a armar un Label con un texto que diga ID dos puntos espacios y el número de ID s número de ID que lo tengo que transformar una incoherencia recién lo transformé a entero texto Pero bueno es para justamente formar parte de este Stream y el strip lo que hago es que bueno le borre los este los espacios que pueda tener a la izquierda o a la derecha Luego de eso al igual que hoy calculo el largo de ese texto que en este caso va a ser simplemente un número más este texto ID perdón y bueno juego con eso para establecer justamente el largo del próximo rectángulo que va a ser el rectángulo de fondo donde va a salir el ID y finalmente pongo el ID propiamente dicho Sí con puttext pongo el ID es decir este String perdón de ID bueno el resto de los datos ya lo manejan que son las dimensiones los colores etcétera etcétera Sí qué pasa en este caso Cómo determino cuando la persona cruza la imagen vamos a ejecutar de nuevo el programa para ver eso quizás ese detalle pasó de largo pero para que lo puedan entender bien el recuadro es un recuadro muy grande Cómo determino cuando la persona cruza bueno a cada persona fíjense que le he puesto en el centro del bonding box un puntito Entonces ese punto veamos acá el caso cinco que es la primera persona que cruza el rojo fíjense que acá está cruzando el borde Superior y la contabilidad sigue en uno cuando cruce este punto a la línea ven Perdón estaba en cero recién va a pasar a un Entonces el elemento central aquí a tener en cuenta es si pasa ese punto por la línea o no Porque Obviamente el rectángulo es muy largo y bueno tomar una postura otro no tenía mucho sentido tomo el centro de la imagen bien eso en realidad lo tenemos que armar el siguiente modo Cómo calculo el centro bueno fácil tomo las dos coordenadas x las dos coordenadas y con eso calculo el ancho y el alto y una vez que tengo eso divido por dos una cosa divido por dos la otra y obtengo el centro con lo cual en CX y C tengo el centro de ese rectángulo una cuenta matemática muy sencilla y una vez que tengo ese dato escribo o defino el círculo con las coordenadas CX y C es decir el centro de ese Bond s bueno el resto insisto son colores relleno el ancho et el grosor Perdón etcétera etcétera ahora viene la parte final y para eso vamos a ejecutar Este programa nuevamente para que se entienda la lógica de lo que vamos a hacer Voy a generar un vector en donde acumule todos los ID que pasaron por la línea verde es decir este vector tiene en este momento TR 5 ahora va a tener 33 pasa esta persona etcétera etcétera y voy a tener otro vector en el cual voy a acumular todas las personas que pasaron por la línea roja o sea ya tengo el tres al 5 y ahora se va a sumar el 33 ahora el 45 se suma al vector verde por de alguna manera y ahora el 45 se suma al vector rojo para qué hago esto porque la idea sería cuando un ID pase la línea roja preguntar si antes pasó por la verde Si antes pasó por la verde quiere decir que va en la dirección de abajo hacia arriba que que es la que quiero contar si Por ende pasó la línea roja como lo que vienen de arriba hacia abajo pero no pasó por la verde porque no está en el vector de los que cuentan los ID que pasaron por la verde no va a contar cómo lo hago Esto bueno en principio pregunto con esta pregunta Sí si el centro x y el centro I de la persona que está pasando por una línea verde en este caso está pasando por los límites de la línea verde sí los límites de la línea verde son el ancho y el alto voy a tomar 20 valores antes y 20 valores después porque Bueno me toma la licenci es difícil por ahí detectar que justo está el rojo el punto Perdón sobre la línea verde entonces bueno para tomarme esa licencia tomo un poquito antes un poquito después lo que hago es si ese punto pasó por la línea verde pregunto si ese ID está en el vector vector a lo he creado junto con el acá arriba bien volvemos si es ID no está en el vector count a Lo agrego con lo cual la próxima vez si es que pasara una secuencia porque quedan dos secuencias muy pegadas y en ambas secuencias ese punto está 10 20 arriba o 20 abajo de la línea verde no lo volvería a contar porque ese ID ya está en el vector con a está bien luego hago lo mismo con lo que pasa en la línea roja pregunto por el centro x y el centro y ahora con los límites que corresponden a la línea roja recuerden vuelvo acá arriba que tengo límites para la línea verde l an y limits que son los límites de la línea roja bien con eso ahora voy a preguntar igual que hoy Cid ahora no está en count que es el vector que cuenta Lo que pasa por la roja pero si ese ID sí está en el vector de lo que pasaron por la línea verde Entonces si no está en el vector rojo porlo deuna manera pero sí está en el vector verde quiere decir que es una persona que está atravesando la línea roja y va en la dirección correcta con lo cual agrego ese ID en el vector de los que pasan por la línea roja en la dirección que yo quiero con esta información luego ya tengo todo resuelto Por qué hago un rectángulo para poner arriba el conteo y pongo en el conteo el length de count Qué quiere decir leng de count el largo de count si count tiene todos los ID que pasaron por la línea roja producto ha pasado por la verde quiere decir que esas cantidades son las cantidades de personas que pasaron por la línea roja habiendo pasado por la verde H Con eso tengo todo resuelto ya que lo que me queda simplemente es hacer el Im show y el wiik H lo probamos una vez más para poder verlo definitivamente este cómo es este proceso Pero habiendo entendido la lógica de El array eh que cuenta los que pasan por la verde aquí el tres ya pasó por la verde ahora va a pasar por la roja y vemos que ya cuenta uno H bien Ahora va a ser lo propio el cinco acá agrega el el id5 al vector de los verdes y ahora cuando pasa la línea roja dice Bueno este cco que pasa por la roja pasó por la verde Sí entonces cuento dos diferente el caso de la señora 32 que ahora está pasando por la línea roja pero como no está en el vector de los que pasaran por la línea verde no lo contó si va a contar el 33 si va a contar el 45 aquí no tengo ningún caso Pero bueno este podría constatarlo ustedes corriendo la línea de una persona que pasa en la dirección que yo quiero pero por fuera de los anchos de los límites de la línea roja sí como si fuera el 12 pero en la dirección contraria bueno con esto terminamos eh esta práctica la ejecución de este programa y lo que les dejo aquí es otro programa que se llama tracking + Counting Traffic piie que usa este video Traffic 1. mp4 para hacer algo parecido pero en lugar de contar personas cuentan autos en una ruta bien eh Insisto que pueden hacerlo en las dos elecciones Quizás lo de la ruta no la imagen que yo les mando el video pero pueden buscar otro video donde se vean claramente las dos manos de una ruta y bueno poder contar en una dirección o en la otra haciendo lo mismo que hicimos aquí Pero obviamente poniendo en un caso la línea verde en un sentido y en otro caso la línea verde en otro sentido bien les dejo esto para que como siempre indaguen Un poquito más larga esta primera parte Perdón por lo largo Pero bueno era necesario para ver toda la la riqueza que tiene este tema del tracking terminamos esta primera parte nos vemos en la segunda parte para ver cómo detectar texto desde una imagen aquí terminamos con la primera parte de esta clase nos vemos en la segunda parte