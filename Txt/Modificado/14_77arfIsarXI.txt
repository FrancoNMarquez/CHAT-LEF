 Titulo: Clase8 (parte 1) Curso Inteligencia Artificial 
 URL https://youtu.be/77arfIsarXI  
 1242 segundos de duracion 
 Hola bienvenidos Esta es la primera parte de la clase número 8 del curso de Inteligencia artificial de ifes en ella veremos los conceptos del algoritmo de árboles de decisión y también hablaremos del tuneo de algoritmos empezamos  Hola a todos Bienvenidos a la clase número 8 del curso de Inteligencia artificial seguimos en el módulo de Machine learning para ver nuestro tercer algoritmo de Machine learning en este caso árboles de decisión ya vimos en las dos clases anteriores regresión lineal regresión lineal simple revisión lineal múltiple y en la clase anterior progresión logística Hoy le toca el turno a este nuevo algoritmo árboles de decisión no obstante nos quedó el tema pendiente en la clase pasada cuando vimos el algoritmo de regresión logística habíamos tocado un parámetro que se llamaba solver al cual habíamos cambiado las opciones para poder lograr un mejor score de algoritmo bueno eso lo tratamos y lo explicamos de una manera muy sencilla recordarán y dijimos que en esta clase lo íbamos a trabajar en profundidad por eso vamos a verlo ahora incorporando un concepto que es el de tuneo del modelo cuando mencionamos la palabra tuneo seguramente esa palabra la podemos identificar con muchos ámbitos pero descarto que la mayoría de los casos esto no va a al tuneo vinculado a los autos Qué es el tuneo de autos el tuneado de autos es un proceso de personalización y ajuste de un automóvil para mejorar su rendimiento su apariencia y o su funcionalidad esto puede incluir la modificación de partes del motor la suspensión los neumáticos la aerodinámica y otros componentes para mejorar el manejo la velocidad y la eficiencia del automóvil el objetivo final del tuneo de autos y lograr un rendimiento optimizado y adaptado a las necesidades y preferencias del conductor a partir de ahora este concepto no va a estar solamente identificado con los autos sino también lo vamos a incorporar dentro del mundo de la Inteligencia artificial y las redes artificiales para poder explicarlo de la manera más clara posible vamos a iniciar Desde los primeros conceptos básicos del Machine learning para ello vamos a identificar que en realidad nuestro algoritmo de Machine learning puede verse como una caja negra caja negra que recibe valores de entrada y emite valores de salida o predicciones la esas predicciones sean lo más certera posible por eso trabajamos habitualmente tratando de mejorar los score y Tratando de buscar el mejor score concretamente para ello la pregunta que nos vamos a hacer es justamente Cómo puedo mejorar el modelo cuando vemos el modelo de relación lineal simple la fórmula era la siguiente en modo tal de que cuando yo tenía un valor de entrada x para obtener un valor de salida y lo que tenía que hacer era multiplicar este valor de entrada x por un coeficiente a y sumarle el intercepto B de modo de que esa cuenta me iba a dar mi valor de salida y esto lo veíamos cuando en la parte práctica escribiríamos lo siguiente primero definimos nuestro conjunto de entrenamiento y nuestro conjunto de Test luego generábamos el modelo en este caso de la dirección lineal y luego entre lavamos el modelo cuando eso pasaba Ya teníamos nuestra ecuación que es la que estaba aquí es decir y igual a este valor que es el a que aquí tenemos en la expresión de aquí arriba por x + B que es este valor que está aquí que es justamente lo que veíamos aquí en esta expresión eso sucedía toda y cada vez que nosotros justamente generamos un nuevo modelo a partir de un entrenamiento una vez logrado ese modelo mediamos el score que justamente lo hacíamos Con este código que tenemos aquí abajo y teníamos la precisión para el modelo de entrenamiento y la precisión para el modelo de Test pero allí terminaba la búsqueda de nuestro mejor modelo Instagram nuestro mejor modelo y sabemos que justamente aquí teníamos una precisión que dejaba mucho que desear por lo tanto es normal que Busquemos un nuevo modelo y este proceso no logró el mejor modelo entonces lo que yo puedo hacer es En búsqueda un mejor modelo volver a insistir con otro conjunto de entrenamiento y test volver a entrenar el modelo y ver Si obtengo un mejor Score por eso genera un nuevo proceso cambio el Random Style 3 antes de ir al Rango 32 justamente para generar un nuevo proceso y un nuevo modelo y al generar ese proceso obviamente los coeficientes son diferentes a los que tuve en el caso anterior y la precisión obviamente también Lamentablemente la precisión es peor que en el caso anterior Esto me lleva a buscar un nuevo modelo Por eso uso un Random Stay 5 y al reproducir un nuevo proceso veo que en este caso Además de que cambia el coeficiente y el intercepto el a y el B obtengo una mejor precisión que en los dos casos anteriores recordemos si vamos hacia atrás que tenemos en el primer caso Random State 2 tenía una precisión de 0,44 y 063 luego en el 3 tenía 0,46 047 perdón y 057 y en el Random Stay 5 tenemos 0 43 y 069 que esto obviamente pudo seguir intentando otros procesos y ver si es score aún pudo mejorarlo más O quizás este sea el mejor de todos concretamente no he hecho otra cosa más que repetir esta experiencia de cambiar el conjunto de Test y de entrenamiento generar un nuevo modelo Y a partir de ello tener un nuevo coeficiente un nuevo intercepto y Por ende un nuevo score que puede ser mejor o peor que el anterior esto no solamente aplica a la radiación lineal simple sino también a la relación lineal múltiple la diferencia aquí es que obviamente no tengo una sola variable de entrada sino que tengo más de una variable de entrada con lo cual voy a tener obviamente más de un coeficiente es momento de incorporar un nuevo concepto que es el de pesos que es un sinónimo de coeficientes pero que en este ámbito del Machine learning van a escuchar muchas veces a hablar del coeficiente como peso y es bueno que empecemos a incorporar Nosotros también en un algoritmo de Machine learning los pesos son valores numéricos es decir todas estas a que están aquí que se asignan a cada una de las características de entrada es decir por eso están justamente multiplicadas por cada una de las x esto son ajustados durante el proceso de entrenamiento del modelo como vimos el caso anterior y se utiliza para calcular la salida o está ahí que tenemos aquí en la expresión los pesos indican la importancia relativa de cada característica Qué quiere decir esto que si A3 por ejemplo Es mayor que a dos pues entonces la variable de entrada X3 va a tener más importancia para el modelo que la variable de entrada x2 el proceso de ajuste de los pesos es obviamente algo fundamental en el entrenamiento del modelo massignarle cómo lo vimos justamente en los casos de recién durante el entrenamiento el modelo ajustan los pesos para minimizar el error entre la salida real y la salida predicha es decir entre el valor que Calcula como predicción y el valor histórico que yo tengo en el conjunto de test el objetivo como siempre es Buscar el mejor score y para ello es imprescindible encontrar los pesos óptimos que produzcan las predicciones más precisas para datos nuevos y no vistos anteriormente la pregunta que puede caber ahora es es la única forma de mejorar un modelo de obtener un mejor score repitiendo insistentemente su entrenamiento cambiando el conjunto de tesis el conjunto de entrenamiento La respuesta es No y justamente esto lo vimos la clase pasada cuando abordamos el modelo de regresión logística donde trabajamos con un parámetro multiclass que no tenía que ver con mejorar u optimizar el modelo sino con explicitar que teníamos una salida no binaria y luego si Max híper que es un parámetro que podía utilizar en poder mejorar el modelo lo hicimos solamente con un valor fijo no lo cambiamos y obtuvimos una precisión que la que está aquí debajo de 069 para el modelo de tren y 064 para el modelo de entrenamiento En búsqueda de un mejor score pasamos a ver otro modelo en este caso le agregamos un nuevo parámetro que es solver bueno ese solver y yo puse Aquí en la descripción tiene tres opciones posibles Newton y ocg que la que estamos usando aquí saga y s.ag y los invite a cambiar los valores de ese parámetro en poder que scorre me daba yo tomé Newton cg y conserve el uso de los parámetros múltiplas y maxter solamente que Max iter lo pasé de 1000 a 5.000 Al haber hecho esta prueba y volver a entrenar el modelo vi que la precisión mejoró considerablemente pasando de 69 a 76 y 64 a 85 en resumen lo que hemos hecho es en principio poder cambiar el conjunto de Test y de entrenamiento y volver a entrenar el modelo En búsqueda de un mejor score pero también y en la última oportunidad lo que hemos hecho es cambiar los valores de los parámetros para justamente Buscar también otra forma de lograr el mejor score esos parámetros en realidad de ahora es más le vamos a llamar hiper parámetros y es allí donde radica la explicación del título de esta placa y de todas las anteriores que tiene que ver con el tuneo del modelo Qué es tunear un modelo de Machine learning es trabajar cambiando los valores de sus hiper parámetros En búsqueda de mejores cortes esta frase que está aquí refuerza esa idea los modelos tienen la posibilidad de tunearse a través de su simple parámetros y los valores que pongamos en ellos en la búsqueda de un modelo optimizado ahora bien yo puedo hacer ese trabajo obviamente manualmente como lo hemos hecho hasta ahora cambiando los valores de los IP parámetros y probando sus score ahora nada no garantiza que por más cantidad de prueba que hagamos no haya una combinación que no hayamos probado y que nos hubiera dado un score superior por eso además de la prueba manual existen técnicas que hacen ese trabajo que nosotros hacíamos manualmente de manera automática garantizándonos una mayor posibilidad de que obtengamos ese mejor score esta o alguna de estas técnicas la vamos a ver en la parte práctica es decir en la segunda parte de esta clase bueno terminado de desarrollar el concepto de tuneo y optimización de modelos que nos quedó pendiente de la clase pasada es momento de empezar justamente con el algoritmo propio de esta clase árboles de decisión bueno árboles de decisión es un algoritmo que lo primero que tenemos que destacar es importante tanto para problemas de regresión como problemas de clasificación tanto para valores continuos como para valores discretos este algoritmo se llama justamente árbol de decisión porque tiene la misma forma que un árbol pero a diferencia de un árbol en su forma natural tiene la diferencia que en este caso es un árbol de tipo invertido justamente como está invertido lo primero que hay que hacer es empezar por una decisión a partir de una variable de entrada lo que hay que identificar aquí prioritariamente es cuál es la variable de entrada más representativa que puede empezar a dividir la estructura de ramas invertidas hacia un lado o hacia el otro Bueno así radica una de las cuestiones principales tiene que resolver nuestro algoritmo este algoritmo A diferencia de los algoritmos que hemos visto hasta ahora maneja muy bien las relaciones no lineales Esto justamente es un aspecto débil de los algoritmos que vimos anteriormente Y lo vemos en los gráficos aquí tenemos los gráficos que habíamos logrado justamente en el conjunto de days y dail se acuerdan las llamadas telefónicas del call center y vemos que en este gráfico que está a la izquierda tenemos una relación fuertemente lineal con lo cual cualquiera de los modelos que hemos visto hasta ahora Funciona muy bien pero en el cuadro que está a la derecha esa realidad no se da bien en este tipo de circunstancias es cuando justamente un árbol de decisión es ideal bien Vamos a explicar a través de este gráfico ahora cuál es la forma en que se crea un modelo de tipo de árbol de decisión vamos a hacer un ejemplo muy gráfico para que se pueda entender lo mejor posible yo tengo aquí un gráfico de dos coordenadas ojo a no confundir con el tipo de gráfico que veníamos trabajando donde tenía en este eje la variable de entrada y en este eje de ahí o variable de salida Aquí tengo dos variables de entrada la x1 y la x2 la combinación de ambas me describe todo este conjunto de puntos que pueden dar lugar a visualmente identificar 5 subgrupos de puntos que identificados a través de colores azul rojo amarillo marrón y negro y también lo vamos a acompañar con algunas líneas que también nos pueden ayudar a identificar mejor a cada uno de esos grupos lo siguiente que tenemos que hacer y muy importante es definir Cuál es la variable más significativa que me va a dar la decisión fuerte de este árbol de decisión y yo voy a elegir aquí entre estas divisiones al valor este que está aquí que justamente representa a la x1 y el valor número 3 al elegir este valor Yo tengo un conjunto de puntos que están a la izquierda que son todos estos que están aquí los azules y los rojos y otro conjunto de puntos que están a la derecha que son los que están aquí amarillo marrón y negro a partir de esta decisión yo pongo una expresión que es la primera expresión del árbol de decisión x1 menor a 3 y eso como es el primer elemento del árbol de decisión se llama no raíz este nudo raíz me va a dar lugar a como dije recién a un conjunto de puntos a la izquierda y otro a la derecha con lo cual lo siguiente que tengo que ver es cómo empiezo a subdividir el grupo que está a la izquierda bueno están los azules y los rojos Cómo se dividen a partir de el valor 6 de la variable de entrada x Por ende el siguiente nodo lo pongo con la expresión si x2 es menor que 6 y a partir de eso reconocer si son menores serán los rojos y son mayores en Los Azules que es lo que voy a plasmar aquí es decir el sí me lleva al rojo y el no me llevara azul Qué pasa después de esto Bueno pues los rojos ya no tienen más ninguna idea de división como vemos aquí y tampoco Los Azules con lo cual justamente ese nodo rojo y ese nodo azul que responden al sí y no del x no menor a 6 se llaman no de decisión de este modo ya he agotado toda la lógica que tiene que ver con la parte de la izquierda del árbol y tengo que ir ahora en lugar de la opción Sí a ver la opción no del nodo raíz para ello tengo que pensar en todo este conjunto de puntos amarillos marrones y negros que está a la derecha de esta decisión x13 con lo cual ahora voy a el no y me lleva a que este gran conjunto de puntos tiene como elemento divisor a esta línea que representa el valor 5 de x2 con lo cual pongo esta expresión aquí y me va a dar lugar también aún sigue un no tomamos el Sí y el sí me lleva al conjunto de abajo o sea los valores x2 menores a 5 son todos estos que están abajo que a su vez se subdividen en dos grupos como se subdividen a partir del elemento 7 del eje x1 con lo cual Esa es la expresión que pongo aquí y eso me va a llevar a identificar a que si es sí identifica el grupo marrón y si es no identifica al grupo negro tanto el nodo marrón como el nodo negro al igual que el nodo rojo era azul todos son no de decisión y del mismo modo podemos decir que nodo x2 menor a 5 y x1 menor a 7 al igual que el x2 -6 son también no de prueba complementamos lo que falta del árbol justamente con la parte superior a x2 menor a 5 o sea que son mayores a 5 que son los puntos amarillos con lo cual tengo un nuevo nodo de decisión ahora el amarillo con esto terminamos de describir la estructura del árbol de decisión en relación Al conjunto de puntos que se nos presenta todo esto que yo armado visualmente es decir toda esta identificación de estos puntos y toda esta estructura de árbol lo tengo que hacer de este modo visual Obviamente que no esto es un ejemplo lo que tenemos que hacer es justamente Buscar que el entrenamiento del modelo nos dé esa respuesta Lo mismo tengo que pensar en cuál es la estructura de este árbol puede tener más nodos puede tener más brazos más ramas por supuesto y justamente también el entrenamiento del modelo es quien tiene que determinar la estructura ideal de árbol para la situación que se nos presenta con lo cual lo que tenemos que hacer es buscar como dijimos desde el principio de esta clase el modelo óptimo y el modelo óptimo como lo podemos hacer justamente ponen tuneo de hiper parámetros bien Cuáles son las ventajas ahora de este modelo en principio es un modelo de muy fácil interpretación y es muy fácil visualizar justamente a través de herramientas o librerías como la que usamos nosotros Matt es ideal para distribuciones de puntos que tienen una forma no lineal ya hablamos de esto y mostramos dos gráficos justamente que habíamos tenido en la práctica de la clase anterior es decir aquella destrucción de puntos que no tiene una forma lineal justamente da un contexto ideal para aplicar este algoritmo de árboles de decisión se requiere mucha menos limpieza de datos respecto de los otros modelos es decir este modelo no se ve afectado por valores Nan nulos ni tampoco por valores atípicos o óleos otra ventaja es que a diferencia de otros modelos como los que vimos hasta ahora este algoritmo no necesita del proceso de normalización de características de entrada y finalmente la desventaja que en realidad es una sola y muy importante que tiene que ver con un concepto que abordamos en la parte teórica de la clase anterior él sobre ajuste si la división de nuevas del árbol puede llevarse al extremo de encontrar un camino para cada situación a punto de cubrir todas las opciones posibles es decir que la estructura de nodos y de ramas llegue al máximo nivel de detalle para lograr el objetivo Pero esto no va a llevar a crear un modelo perfecto para el conjunto de entrenamiento que estamos tomando para crear el modelo Pero evidentemente va a fracasar para cualquier otro conjunto de datos Que aparezca a futuro es decir va a ser un modelo que no va a generalizar y Por ende un modelo malo este concepto de sobreajuste es mucho más grave Aún se tiene en cuenta que los cambios mínimos en la composición del conjunto de datos pueden afectar severamente la precisión del modelo y Por ende combinado este problema con el problema del sobre ajuste bueno es alguna que tenemos que tener muy en cuenta a la hora de buscar un buen modelo para la situación que se nos presente o para las situaciones futuras bien para evitar esto es fundamental el trabajo del tuneu de hiper parámetros que es lo que abordamos a lo largo de toda esta clase tanto para el problema del sobre ajuste como para el problema de la composición de los datos por lo tanto es imprescindible trabajar en este caso en particular con dos parámetros o dos hiper parámetros Mejor dicho Uno es la profundidad del árbol A qué se refiere esto a cuán largo puede llegar a ser el árbol y la otra es la cantidad mínima de datos que justifican la creación de una nueva rama en el caso nuestro del ejemplo que usamos recién usamos o identificamos cinco grupos Podrían haber sido más podría haber sido menos bueno esa es una de las cosas que tenemos que configurar en el hiper parámetro o en los hiper parámetros para evitar este problema de sobre ajuste y bien hasta aquí la primera parte de esta clase número 8 donde abordamos todos los conceptos teóricos de este nuevo algoritmo de Machine learning árbol de decisión ahora vamos a la segunda parte a poder implementarlo en la práctica nos vemos allí hasta aquí llegamos con esta primera parte los esperamos para poner en práctica todo lo aprendido en la segunda parte