 Titulo: Clase18 (parte 2) Curso de Inteligencia Artificial 
 URL https://youtu.be/Vr5mQ6m-WKA  
 1365 segundos de duracion 
 Bienvenidos a la segunda parte de esta clase Los invito a empezar con ella Bueno ahora Estamos en la segunda parte de esta clase vamos a en principio abordar todo un proceso que nos va a llevar a poder implementar Este modelo era un entorno web eso en cuanto a lo que es el contenido central de esta clase pero gran parte de esta segunda parte específicamente la última nos va a dar una buena introducción hacia todo lo que tiene que ver con las siguientes clases que nos van a llevar hasta el final del tema redes neuronales convolucionales así que bueno sin más nada que decir empecemos ya mismo con la clase bien aquí estamos en la segunda parte de este colap de la clase 18 con el propósito como dice título aquí de utilizar el modelo desde una página hay tareas que para lograr ese objetivo vamos a hacer dentro del entorno del colap y tareas Que obviamente la vamos a hacer fuera del entorno del collage hasta llegar al entorno web vamos aquí a tener una guía de Cuáles son los pasos que tenemos que hacer en un entorno Y en el otro vamos en primer orden con los pasos que vamos a hacer dentro del entorno de cola lo primero que tenemos que hacer es exportar el modelo Por lo cual vamos a usar el método save de la variable modelo y vamos a exportarlo a un formato h5 que es el formato de tensorflow justamente que utiliza cada vez que vamos a exportar un modelo fuera del collap o fuera del entorno el cual hemos desarrollado el modelo para hacer utilizado en la aplicación web por una app el nombre que le hemos puesto aquí es este nombre que está adelante del h5 puede ser el nombre que quieran y si la extensión debe ser h5 porque es la extensión como dije antes de exportación que usa tensorflow luego lo que tenemos que hacer es instalar tensors js que en realidad es una aplicación que permite desarrollar un modelo que pueda ser utilizado en el entorno de javascript que justamente es hacia donde vamos a llevar nuestro modelo lo ejecutamos paso Seguido lo que vamos a hacer va a ser crear una carpeta que le vamos a poner carpeta salida que se va a crear dentro del entorno de cola luego vamos a recurrir a tensor Flow js converter para convertir Este modelo que hemos grabado con la extensión h5 en la carpeta salida para que me formateé los archivos en el formato ideal para usar justamente en una aplicación con html y javascript en un entorno web ahora vamos a los pasos fuera del entorno de colap y lo primero que tenemos que hacer es bajar el archivo modelos nulo.rar que va a estar en el campus virtual lo vamos a poner dentro de una carpeta que puede tener el nombre que queramos yo elegí aquí modelo guión bajo nnos y vamos a poner allí dentro de esa carpeta este archivo zip para luego desviar luego vamos a ir aquí a esta carpeta de cola y vamos a buscar nuestra carpeta salida que creamos donde ya tiene que estar los dos archivos que acabamos de crear Recién con tenso flojo js converter y voy a ir a esta opción de aquí y los voy a descargar tal como dice el paso 4 que tenemos aquí en la descripción dentro de la carpeta que Acabo de crear si voy el explorador de Windows Aquí está el primer archivo y el segundo que son los mismos que estaban en la carpeta de cola es decir estos dos lo que tenemos que hacer a continuación en este paso 6 es Ingresar a esa carpeta nuevamente pararnos en ella y accionar el botón derecho del mouse y seleccionar la opción abrir terminal una vez allí vamos a escribir lo siguiente y vamos a dar enter con lo cual vamos a activar un servidor local una vez hecho esto vamos a ir a un navegador y vamos a escribir localhost dos puntos 8000 lo cual nos va a levantar automáticamente el archivo Index html que es uno de los archivos que desisteamos Y tenemos dentro de la carpeta modelo ns es decir este archivo que está aquí se va a abrir cuando yo escriba lo que comentaba recién esta aplicación es un Index html es un archivo html que tiene también algunas cosas codificadas en javascript y lo que va a estar levantando es este archivo y este archivo porque justamente son los que representan el modelo que yo exporte en principio guardé en formato h5 y luego exporte a esta carpeta y justamente me generó estos dos archivos que son los que necesita esta aplicación que estamos corriendo aquí y en la cual voy a empezar justamente a tener la posibilidad de escribir un número con el Mouse y ver si la predicción es o no correcta empecemos con una prueba con el botón para decir me aparece aquí abajo Cuál es la predicción en base a esto que lo hice a mano tal cual como los números que originalmente se colocaron en las con este botón voy a limpiar para seguir escribiendo números y volver a predecir puedo probar otras posiciones y este caso justamente me da la posibilidad de entender bueno las bondades de el aumento de datos cuando cambia la posición natural de los números o los gira o los hace un zoom para acercarlos un zoom para alejarlos bueno en este caso seguramente en en no hay ningún número que esté en esta posición aún así justamente gracias al Drop y gracias a el aumento de datos ha hecho una predicción correcta bueno como vemos cuando yo escribo algo que no va a responder a ningún valor de los que tiene el conjunto de datos obviamente la predicción será la que entiendes más parecida a esa posibilidad pero evidentemente la proyección siempre va a ser mala Bueno aquí queda la aplicación entonces para que ustedes hagan todas las pruebas que quieran y justamente puedan ver las características de cómo responde el modelo a lo que ustedes dibujen aquí en este recuadro también pueden hacer lo siguiente que es ir a abrir el archivo index html y las personas que conozcan Este lenguaje bueno poder mirar un poquito el código que está aquí y tratar de entender las características del mismo obviamente aquí hay un código que lo que hace y bueno obviamente formatear en el formato que necesita el modelo de entrada acuérdense que esto que estoy haciendo es un dibujo en un Canvas y hay que transformar en un tensor para que justamente el modelo pueda tomarlo y evaluarlo y hacer la proyección como corresponde Sí aquí está el model punto Jason que es uno de los archivos que bajamos justamente de este nuestra aplicación colapse cuando hicimos la exportación Bueno un último tema para terminar es el de dar de baja el servidor que usamos como local juegos para ver nuestra aplicación web Entonces tenemos que ir para ello a la ventana de la terminal y oprimir control c bien este sería el último tema Por lo cual vamos a pasar a la segunda parte de la clase para cerrar la segunda parte de la clase 18 vamos a contextualizar un aspecto muy importante que nos va a acompañar durante el resto de las clases vinculadas a la red neuronales convolucionales vamos a empezar por decir que hasta aquí hemos visto cómo crear nuestras propias redes en principio las redes neuronales artificiales y luego las redes neuronales convolucionales con todas las características y opciones que hemos aprendido a manejar en estas cinco clases en el mundo de las redes neuronales convolucionales existen investigadores y científicos que trabajan permanentemente en el diseño de redes más eficientes y más rápidas nosotros lo hacen por sus propias motivaciones sino que hay organizaciones que promueven desafíos para cada año poder seleccionar y premiar a las mejores propuestas una de las organizaciones que promueven este tipo de desafíos y premiación de los proyectos más importantes se llama image net large visual recommisión challenge y es en donde se evalúan algoritmos para la detección de objetos y la clasificación de imagen a gran escala Aquí vemos todos los años donde este desafío se llevó a cabo y vamos a poner aquí rápidamente la referencia de algunas redes que fueron las ganadoras de algunos años y más allá de eso fueron muy conocidas porque se usaron mucho a partir de ese evento estas redes son diseñadas como dijimos recién por investigadores y científicos y tienen estructura por arquitectura complejas como la que aquí vemos Esta que estamos viendo aquí corresponde a Álex net que es una de las más conocidas y que fue la ganadora de la contienda del año 2012 este tipo de redes logran altísimos niveles de precisión y rapidez debido a dos elementos fundamentales en primer orden son entrenadas con datasette de millones de imágenes y el segundo orden se las entrega con un número muy grande de entrenamientos obviamente para un desarrollador común como nosotros generar y crear este tipo de redes es una tarea casi imposible dado que no disponemos de los recursos humanos ni materiales para poder hacerlo pero no todo es malo dado que si bien es complejo crear este tipo de redes para un desarrollador común como nosotros estas redes que han sido seleccionadas y premiadas en estos desafíos quedan a partir de ese momento a disposición para que cualquiera de nosotros las podamos usar  en concreto estas redes son reconocidas en el mundo de Deep learning con el nombre de redes pre entrenadas como ya dijimos estas redes son entrenadas con Data set de millones de imágenes que están conformados por un grupo de determinados tipos por ejemplo en más popular de los datasets que se usan en este caso se llama coco Aquí está el sitio web justamente oficial este datasette y utiliza 80 categorías de objetos diferentes  otro dato importante es que este dataset tiene 330.000 imágenes de cada imagen hay cinco captions con lo cual en total existen 1,5 millones de objetos de instancias ahora la pregunta que nos cabría aquí es Qué pasa si yo pretendo usar una red pre entrenada para seleccionar o trabajar con imágenes de otros objetos que no se corresponden con los del datasette con que fuente nada es por ejemplo con algunos de los 80 objetos del Coco dataset que aquí vemos  en realidad los pesos de esas redes han sido entrenados para seleccionar determinados patrones de imágenes pero no Por ello se circunscriben específicamente sus objetos dado que si bien no son los mismos objetos hay patrones que pueden ser similares y poder ser utilizados del mismo modo es por ello que nosotros podemos utilizar una red pre entrenada volviendo a entrenarla con otros datasette que pueden ser otras set de mi propiedad o bien otros Data set que también son públicos como Coco y que tienen imágenes de diferentes contextos por ejemplo imágenes aéreas imágenes subacuáticas u otro tipo de objetos pero teniendo claro esto quizás ahora ustedes se pregunten si a reentrenar esa red con ese nuevo Data set vuelvo a necesitar un tiempo y recursos que no tengo para poder llevar a cabo ese entrenamiento en realidad esto no es así dado que no Se entrena completamente la red sino sólo una parte de ella ya que como dije antes todos los pesos de las capas principales han sido entrenados con imágenes que si bien no son las mismas que vamos a usar Nosotros también sirven para manejarse con nuestras nuevas imágenes  concretamente tenemos en nuestras manos una enorme oportunidad de desarrollar aplicaciones muy interesantes dado que podemos utilizar redes que han sido creadas por desarrolladores e investigadores de primer nivel y nuestro trabajo sólo se limitará a seleccionar la que más nos convenga Y entrenarla utilizando recursos que estén a nuestro alcance pero de qué hablamos cuando hablamos de seleccionar la red que más nos convenga Más allá de que hay diferentes tipos de redes que abordan distintos tipos de tareas a realizar con las imágenes así como también diversidad de tipos de imágenes con que fue entrenada lo cual nos da la posibilidad de elegir la red que más se adapta a nuestras necesidades una misma red tiene muchas veces varias opciones con diferentes tipos de precisión y de velocidad  Por lo general cuando una opción de una misma red es más veloz seguramente será menos precisa En comparación con las otras opciones y viceversa Esto se debe a que las opciones más rápidas y menos precisas de una misma red tienen una arquitectura más sencilla esto es menos neuronas menos capas etcétera y conforme vamos viendo las otras opciones esa arquitectura va creciendo Y con ello va creciendo también la precisión y Por ende la velocidad va descendiendo ahora bien En qué lugar podemos acceder a estas redes pre entrenadas para comenzar a usarlas bien hay muchas plataformas a las cuales podemos recurrir para eso en primer lugar podemos mencionar acá ya que ya la conocemos por haberla utilizado en la clase 3 en este curso aunque con otro propósito pero vamos a agregar acá y está aquí quien también como uno de los sitios más completos para buscar este tipo de redes es muy conocido y no solo con la posibilidad de acceder a ellas sino también para poder ver información de aplicaciones de estas redes  si bien Después vamos a poder ver este sitio con más detalle aquí podemos ver algunas aproximaciones alguna información que es muy interesante para ver la obra aquí por ejemplo podemos ver si queremos Buscar una red pre entrenada que tenga que ver con imágenes o contextos vamos a seleccionar imágenes que lo que estamos viendo ahora y tenemos por ejemplo un tipo de problema con imagen a tratar Y tenemos un buscador que por ejemplo nos permite Buscar una red por arquitectura buscamos una arquitectura determinada y queremos ver qué opciones de res la usan O también por ejemplo contrata set es decir queremos ver qué redes están entrenadas con un determinado Data set que justamente tiene que ver con el problema que queremos abordar  pero vamos a poner especial foco en una de las redes pre entrenadas más conocidas hoy por hoy en el mundo de las redes neuronales convolucionales que es la red io cuyas siglas significan You only look once esta consideración especial se debe a que vamos a usar mucho esta red Durante las próximas clases de redes neuronales computacionales toda la información de esta red se encuentra dentro del sitio uttralitiks que es el que estamos viendo Aquí tiene muchas variantes siendo las últimas versiones yo lo v8 y oro  cuando entramos a cualquiera de los tipos de Yolo por ejemplo vamos a mostrar a Yolo v8 vamos a poder ver lo que hablamos antes en relación a las variantes que hay de cada modelo y el tipo de actividades que se pueden llevar a cabo con ella sí aquí tenemos una de las redes y 8 una de las variantes yo lo vi 8 y podemos ver aquí la cantidad de parámetros que tienen las diferentes versiones es decir la más liviana tiene 3,2 millones y la más pesada a 68,2 millones y la velocidad también como varía en la medida que tiene menos parámetros la cantidad de milisegundos que emplea para la detección es 80 y cuando más pesada 479 es decir es más lenta Tenemos también las variantes para detección para segmentación para clasificación y para 11 es decir a los distintos tipos de problemas las diferentes variantes que existen que tiene que ver en cada caso con la cantidad de parámetros propio de la estructura más liviana más pesada y la velocidad más rápido o más lenta también podemos ver en línea lo que hablamos antes la sección Data sets En donde podemos acceder a diversos Data set para entrenar a Yolo por otro conjunto de datos que no son el coco con que fue entrenada originalmente aquí tenemos por ejemplo bistro  un último aspecto abordar como preparación para lo que vamos a comenzar desde la próxima clase es el entorno de trabajo Paisa aquí estamos viendo el sitio oficial de Paisa desde la próxima clase vamos a empezar a trabajar con este entorno y vamos a abandonar por el momento el entorno polar con que veníamos trabajando  el empezar con paichard es una alternativa muy interesante ya que quizás es más apropiado para lo que vamos a ver y además es importante que podamos utilizar otros entornos para poder conocer diversas opciones Y luego podemos elegir la que más nos gusta o más nos conviene  para ello les pido que por favor instalen este software dado que lo vamos a empezar a utilizar como dije recién desde la próxima clase para lo cual vamos a tener que ir a este botón Descargar que está aquí y luego cuidado no seleccionar esta opción que es la versión profesional Que obviamente tiene costo sino elegir Esta que está aquí abajo que es más liviana pero tiene propósitos educativos  la instalación es muy sencilla simplemente van a tener que bajar este ex y ejecutarlo y siguiendo los pasos que tiene ya predeterminados van a poder instalar este software sin ningún tipo de inconveniente Así que con este entorno vamos a empezar a trabajar desde la próxima clase con Yolo v8 y con el entorno de trabajo paisa Bueno hasta aquí Hemos llegado a esta clase 18 donde abordamos todo lo que dijimos al principio el desarrollo de los pasos para poder implementar Este modelo en un entorno web cosa que le habrá parecido muy interesante A todo fundamentalmente aquellos que manejan html y javascript y luego doble introducción hacia lo que es el contexto que tenemos que preparar para todas las clases que vienen a continuación básicamente el trabajar con Yolo que es una red entrenada de las más conocidas y bueno el nuevo entorno de trabajo que es Paisa Sí así que bueno sin mucho más que decir nos quedan muchas cosas para empezar a recorrer desde la clase 19 hasta la próxima clase aquí termina esta clase los espero en la próxima clase nos vemos 