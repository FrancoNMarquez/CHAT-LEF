 Titulo: CLASE 01 PYTHON PARA PROGRAMADORES 
 URL https://youtu.be/ScYQUYOx3r8  
 5605 segundos de duracion 
 a y en la instalación de payton es muy sencilla vamos a ir a google vamos a escribir python y una vez que busquemos así vamos a ver que nos aparecen al principio las publicidades típicas que aparecen en estos casos y luego si nos vamos a encontrar con el sitio oficial de payton www python punto org y así vamos a hacer clic sobre el link para poder entrar a payton vamos a ver la pantalla de payton que aparece con todas sus instrucciones en inglés me ofrece cambiar las al español puedo hacerlo si quiero no no es una obligación por supuesto y vamos a ver todo el menú y todas las referencias en castellano vamos a ir al menú descarga y allí vemos que nos aparece la última versión de payton 3 10 1 es obviamente puede cambiar porque más adelante cuando él esté vídeo puede ser que haya presionamos hacemos clic en ese botón y vamos a ir a disparar directamente allí vértice inferior izquierdo fíjense la instalación la aceleramos a los fines nos alargó el vídeo cuando termina de baja automáticamente se dispara en la instalación hago o abro a payton 310 al pas y hacemos clic y arranca la instalación no tiene ningún secreto es bastante sencilla aceleramos también este proceso que va a tardar un poquito más en la realidad y así termina simplemente puedo hacer click en el botón si quiero desactivar o no el largo del límite del path y con esto termina la instalación de payton bien vamos a instalar ahora visual studio code es una experiencia similar y sencilla también como la que tuvimos con python vamos a hacer lo mismo vamos a ir nuevamente a google y vamos a escribir en este caso visual estudio bueno no aparece en publicidad es como en la opción que tuvimos con python gracias a dios bueno tenemos él en primera fila digamos el sitio oficial de miso el estilo code fíjese que aquí hay una referencia hacia el producto que es un producto desarrollado por microsoft que no por ello solamente puede utilizarse es en windows sino que también puede utilizarse en otros sistemas operativos como linux y como mac y así como también tiene varias plataformas de utilidad también puse con varios lenguajes de programación no será no solamente con python que para lo que vamos a hacer nosotros en principio sino también para otros lenguajes después vamos a ver cuando hacemos el sitio que hay alguna referencia explícita acciones bueno entramos al sitio y bueno como siempre aparece o como nos apareció también en el caso de payton las opciones de inglés o español para hacer algo diferente en este caso lo vamos a dejar en su lenguaje nativo de inglés y directamente me voy aquí a este botón que muy claramente me dice que si hago clic aquí se dispara el download en este caso obviamente entiende que debe ser por windows porque el sistema que yo estoy utilizando obliga aquí y empieza a bajar el ejecutable el instalador nos vamos a acelerar el vídeo en este caso porque evidentemente es bastante rápido el proceso y no sería para nada necesario ya termina en pocos segundos y al tener aquí ya terminada de bajar el excel hago clic aquí y arrancó la instalación - de a cuadrado obviamente que aceptó a los términos de licencia del software de microsoft y le doy siguiente siguiente me pregunta cómo quiero visualizar con mi nombre eliminó del icio y si quiero o no crear una carpeta no uso la opción no crear carpeta porque la voy a poner este la carpeta dentro de lo inicio y lo siguiente bueno obviamente aquí aparecen las opciones que me permiten crear un acceso directo en el escritorio no voy a usar esa opción yo ahora y luego queremos o si queremos si abre la acción desde el menú contextual del archivo del directorio del programa de windows yo le voy a poner que sí y vamos a darle siguiente instalar y para la instalación que también va a ser bastante rápida por lo tanto no es necesario que la seguiremos es importante que tengamos presente que una vez instalado este producto nos va a ofrecer la posibilidad de abrirlo inmediatamente o no pero vamos a no hacer uso de esa opción para poder hacer todo el proceso que haríamos habitualmente rutinariamente cuando queremos escribir código de pack es este esta opción que está aquí yo voy a sacar esa casilla con lo cual quiero terminar la instalación de visual studio con pero no quiero que el producto se abra en este momento entonces hacemos finalizar aquí en este botón y se termina rápidamente la instalación bien ahora sí vamos a ir a visual equivoco una vez que instalamos el producto y vamos a buscarlo de nuevo aquí en el menú seguir hasta la de corta aquí tenemos el selectivo code abrimos la carpeta accedemos al framework visual escribo como bien no vamos a volver a encontrar con la misma pantalla o similar a la que nos devolvió la finalización de la instalación y bueno para empezar a trabajar aquí tenemos que acceder a esta opción abrir carpeta pero para eso justamente vamos a crear primero la carpeta con lo cual vamos a minimizar esto y vamos a ir a buscar el explorador de windows y vamos a ir hasta la unidad de discos y una vez allí vamos a crear una nueva carpeta que le vamos a llamar simplemente python bien y ahora si sabemos que todo lo que vayamos a escribir lo vamos a hacer dentro de esa carpeta para esto dentro de la cual pueden haber obviamente otras subcarpetas cerramos esto vamos a nuevamente illusion studios code y aquí vamos a la opción abrir carpeta y obviamente vamos a tratar de llegar hasta la unidad se y la carpeta python que está que acabamos de crear la seleccionamos y vamos a hacer clic justamente en el botón seleccionar carpeta bien una vez que está así ya vemos que aquí abre el explorador que va a tener una estructura similar a la nuestra de windows solamente dentro del contexto del proyecto que estamos llevando adelante y aquí con este botón abrimos python o cerramos dependiendo de lo que queremos hacer obviamente aquí tenemos la carpeta python y no más que eso dentro de la carpeta para esto vamos a escribir código de programación para eso ahora estamos parados en la carpeta python y vamos a usar este símbolo que está aquí que sirve justamente para crear un primer archivo de payton entonces hacemos clic aquí y vamos a escribir el nombre de el archivo a poner por ejemplo primer archivo ya lo he terminado de escribir a un olvidado enter y ya aparece el logo de payton y como vimos son dos víboras pitón combinadas bien fíjense que ya me aparece aquí un número éste número siempre va aparecer como un número de línea si en la cual yo voy escribiendo yo puedo ir hacia atrás el tranquilamente que siempre el curso se va parando en la línea que yo elija justamente en el lugar que yo me muevo que puedo hacerlo con las flechas del teclado o puedo hacerlo directamente con el mouse bien aquí cómo vamos a hacer para ejecutar esto bueno fíjense que yo escribí esta instrucción y apareció aquí arriba y en el vértice izquierdo un número uno que quiere decir que en este momento yo tengo fíjense es muy claro el cartel que aparece cuando yo me posiciono sobre ese número uno que dice hay un archivo no guardado quiere decir que me advierte en principio que debería tener cuidado de antes de ejecutar un archivo ver y luego guardado como lo guardo contradice con lo cual yo ahora voy a afectar controles y le pido mucha atención que este valor número uno nuestra referencia número uno va a desaparecer automáticamente lo hacemos y eso fue lo que pasó desapareció el número uno con lo cual ya tengo el archivo escritura más bien ahora como lo ejecutó bueno lo voy a ejecutar haciendo clic en este botón que está aquí arriba que es justamente the run y va a aparecer aquí en la zona de abajo un espacio que se llama terminal la terminal es el espacio donde va a verse la ejecución del programa de payton y todo aquello que yo quiera que salga por pantalla se va a reflejar en esa sección denominada tram ya vamos por ello va a tardar un poquito más de costumbre porque obviamente es la primera vez que lo escribimos así que bueno tiene que arrancar python con algunas cuestiones y luego me va a mostrar el resultado que yo quiero bien así este resultado todo lo otro que está escrito antes de lo más importante que es esta frase es toda una introducción de algunas cuestiones que tienen que ver con el producto bueno acá estamos en el visual studio code viendo a este archivo que se llama primer archivo punto pait el cual representa un poco la idea de este típico primer programa que se usa habitualmente cuando uno acceda a cualquier curso de programación que es el hola mundo acá le vamos a poner un hola cómo están más que hola mundo y bueno este primer archivo punto país se encuentra dentro de la carpeta uno nosotros creamos una estructura que se llama la primera carpeta código python como ven allí y luego carpeta uno y dentro de carpeta uno el primer archivo punto país en realidad recordad el archivo como la carpeta con la estructura de carpeta puede ser la que ustedes quieran por supuesto yo he puesto esta como ejemplo pero ustedes pueden armar la o configurar las del modo que mejor les parezca nos acá lo más importante es el tema de código donde lo que ponemos obviamente es un print de un mensaje que queremos reproducir en pantalla la pantalla en este editor que llama visual studio code se denomina terminal donde se visualizan bueno todas aquellas cuestiones que yo quiero mostrarle al usuario por pantalla obviamente encerrado entre comillas y entre paréntesis pues lo que quiero reproducir y antes lo que hago es blanquear la pantalla porque realmente cuando arranca el programa siempre hay una serie de mensajes que no son importantes a través de la orden se ls que es una orden que se ejecuta a nivel sistema operativo por eso se hace a través del método system de la librería o ese y para poder acceder a ese método y esa librería primero que lo primero que tengo que hacer perdón es importarlo tal cual se ve en la línea número uno lo ejecutó con el botón de ejecutar y ahí sale como ven aquí el texto que dice hola cómo están bien obviamente qué y es algo muy sencillo se pueden agregar todas las tengo unos otros prince digamos impuestos para que puedan yo reproducir más de un texto no ya vamos viendo algunas cuestiones importantes aquí sigue en secreto de este print ya lo tenía escrito no se ejecutó porque porque lo encerré entre un grupo de tres comillas simples y cuando yo pongo todo un texto entre tres comillas simples la ejecución del programa en este caso aviso el truco lo ignora así que este eso es importante para que lo vayan teniendo presente después está el tema de los comentarios que de otra manera pero por lo pronto esto es importante cuando quieren anular ustedes ya saben que muchas veces queremos anular por algún propósito en particular una parte del código bueno sacamos esto sacamos esto que siempre tienen que funcionar de a pares no las tres comillas antes del texto que quiero anular y al final del texto tiene unas bueno ahora estas cuatro líneas se han incorporado como ven aquí como siempre estaba en el misión estudio con me marca que este programa no ha sido guardado con este cambio con controle se lo guardó lo vuelvo a ejecutar y obviamente van a salir cuatro líneas como se ve acá en lugar de la única que salía en el caso del programa anterior ahora vamos a ir al primero del programa yo obviamente los tengo ya todos escritos ustedes lo pueden ir incorporando uno por uno que es variables 1 punto pait bien arrancamos el programa como la amo recién limpiando la pantalla y acá tenemos un comentario bien una nueva cuestión que se relaciona con lo que hablábamos recién en este caso pongo el objetivo del programa no obviamente que es crear una variable y este en este caso de tipo texto crear dos variables concretamente y este vamos a ponerlo bien crear dos variables y bueno formar una impresión final con la concatenación de sus elementos y bien ya vimos que para crear una variable sencillamente no hay que declararle nada por el estilo acá lo que se hace es asignarle el valor cuando yo a una variable que le pongo como nombre como se me dé la gana en este caso justamente use la palabra nombre para nombrar la variable le asignó un valor del tipo texto automáticamente estoy diciendo que la variedad el nombre es de tipo si lo mismo con apellido bien la forma de crear y darle contenido a una variable es esta si si no supiéramos que ponerle se le puede poner mente comillas en blanco con lo cual en algún momento tendrá un valor pero por lo pronto no tiene ningún valor de texto normal sí pero me sirve para inicializar la y luego hago un print si esté con una concatenación la concatenación se hace con más con el símbolo más acá estoy concatenando todos elementos de tipo texto hola y cómo le va son de elementos que están encerrados entre comillas son de tipo texto y nombre apellido son variables de tipo texto si yo imprimo esto obviamente tengo la el resultado por pantalla y obviamente un decía un problemita porque me salió todo juntos y cosa que obviamente vamos a solucionar en otro programa que es variable dos puntos by haciendo qué bueno ustedes se imaginan esté mejorando la salida impresa como hemos puesto aquí lo que hacemos es dejar obviamente un espacio luego de lola un espacio antes de él como le va y un espacio entre la variable nombre y la variable e incorporado algunos cambios y un quinto elemento para esta cadena que antes era de cuatro elementos y ahora es de 5 ejecutó el programa y obviamente el resultado como se ve aquí es el que esperábamos de un punto de vista más este lógico en la forma de expresar con las reglas gramaticales como corresponde una frase si bien avanzamos con otras cuestiones de variables tenemos aquí otro programa donde ya cambia un poco la cuestión porque yo no voy a darle como en el programa anterior un vago en los programas anteriores en realidad un valor fijo a la variable nombre o un valor fijo a la variable pedido lo que hago es a partir de ahora pedirle al usuario que me dé ese valor con y obviamente después a una impresión no por pantalla esto no cambia es parecido a lo que venía haciendo en el programa anterior entonces éste como lo hago con un input o imputó lo que hace es poder pedir un valor por pantalla y asignarse lo a la variable a la cual yo lo estoy acá pasándole el contenido entonces si acá lo que ejecutó va a pedir un valor por pantalla y cuando el usuario lo escriba o yo lo escriba se lo va a poner a la variable nombre y en el caso de apellido es exactamente lo mismo entonces yo ejecuto esto y veo que me va a parecer en principio si ven que yo marque hice clic en la terminal si yo no hago clic en la terminal el curso sigue en el editor de texto con lo cual ojo con eso porque bueno estamos en una fase de prueba de diseño obviamente que esto cuando se ejecute en la interfaz como corresponde para el usuario nos va a tener esta esta suerte de dos opciones si va a tener una única opción que lo que salga por pantalla pero en este caso nuestro este que pasa el input me marca un cursor nada más nos avisó que saber que ahí hay un pedido de un nombre porque porque lo sé simplemente no hay ninguna referencia que me diga eso bueno no importa ya vamos a ver cómo mejoramos eso le pongo juan y ahí me aparece el segundo inputs y el que dice apellido igual el input bueno pérez le doy enter y bueno vuelve a poner el a juan pérez como elevar esta vez porque yo puse juan y puse pérez en esos dos símbolos obviamente que esto nos sirve como como algo estéticamente bien presentado fundamentalmente para darle al usuario una idea de qué es lo que yo quiero decir así que tenemos este otro programa donde al input como ven aquí yo le he agregado un texto de referencia ese texto de referencia lo que hace es bueno ubicar al usuario es decir bueno qué es lo que debería yo escribir acá un nombre y acá abajo un apellido también es decir corriendo nos un poco de la forma que teníamos antes que era medio de adivinar de qué era o cómo lo estamos probando nosotros sabemos que lo que buscamos sabemos que escribir así si esto se lo diésemos hacia un usuario no sabría obviamente que hacer bien entonces con este cambio como vemos aquí el input se pone el texto que quiero que aparezca al lado del input sí o del pedido de datos que general está encerrado entre comillas al igual que como lo hiciera con un primo y entre paréntesis por supuesto bien ejecuto esto y realmente me va a salir lo mismo a cambiar el nombre para no ser tan redonda redundantes si se dice jose garcia si bien y este el resultado obviamente es el mismo la diferencia hasta que en este caso obviamente que me pidió en el input introduzca su nombre y el otro input introduzca su precio cosa que en el programa anterior no había hecho fíjense que cada vez que yo ejecuto algo si la pantalla se borra justamente por ese punto existenciales y la terminal también se puede eliminar fíjense que yo se apoyo aquí el referente digamos del cursor del mouse del puntero del mouse está bueno el típico cesto de basura con lo cual puedo eliminar la terminal eso no hay ningún problema si la terminal se borra se ha habilitado otra cada vez que ejecute un programa sin perdón se usa la terminal que está abierta o bien usa otra terminal si está fue eliminada si eso lo pueden ver ustedes como para poder ver si está muy cargada de cosas o quieren abrir una nueva instancia se puede abrir más un listarse también no esté aquí con el más se pueden abrir más una terminal y que la ejecución de programa vaya a una terminal u otro esto no tiene que ver con python tiene que ver con el visual es truco bien seguimos con esto vamos a otro programa que hemos introducido acá bueno hemos introducido otra variable más en este caso dni así que en este caso en particular me va a permitir a mí hacer ya una en un tercer imputado haya nada nuevo acá en esto porque obviamente es exactamente lo mismo que hice con apellido y con nombre y hago un print con uno dos tres cuatro cinco seis siete elementos de cadena y no cinco como antes porque obviamente si ha agregado un nuevo valor tengo que agregar el valor a la cadena más el espacio en blanco para poder establecer una separación bien sabido ese cambio lo ejecutó y le pongo ven acá lo que pasó yo no marque si el cursor aquí y fíjese dónde me salió lo que estoy escribiendo así bueno siempre es importante para esto tener presente que tengo que estar parado en la terminal bueno laura perea y el dni 22 millones 564 mil 778 le doy enter hola laura perea obviamente el número como le va por ahí lo que estaría lo que sería piola acá poner entonces en todo caso en este lugar porque queda como ahora el euro pero hay un número no sabe qué es ese número le ponemos después de la presión con una coma dni números dos puntos y ahí por ahí va a estar un poquito mejor presentado no creo que les está diciendo que ustedes no manejen ahí está ejecutó eso laura dni 22 millones no me acuerdo que hemos escrito el inventamos otro dni está un poquito mejor presentado o la europea coma dni número tanto como le van bien eso en cuanto a bueno sí que sea acá que también para aprender alguna cuestión más que tiene que ver con con el servicio de estudio que yo aquí 2 estoy parado puedo escribir se ls como escribo aquí arriba con él o ese sistema sí y obviamente la pantalla de la terminal se va a currar bien vamos a variables 6 punto pait esté acá vamos a ver algunas otras cuestiones que tienen que ver con los tipos de variables en lugar de pedir nombre y apellido pidió dos precios con la idea de poder reproducir por pantalla bueno la suma de esos dos valores y que usted tiene que gastar es tan bueno obviamente tengo dos input hago una cuenta total igual a precio más precio creció 1 pero de más precio 2 y luego a un print mostrando el texto y el resultado de la web bien ejecutó y pongo el primer presión suma que son 100 el segundo 200 y lo que me muestra al final es una hermosa concatenación pero de cuentas nada si por qué porque el input lo que hace siempre por defecto es devolver un valor del tipo texto está bien no importa lo que yo quiera tomar de la pantalla siempre va a ser un valor del tipo texto con lo cual si lo que quiero es texto fantástico y si no lo que tengo que hacer es convertir ese valor resultante del input en lo que yo quiera que sea sí entonces en este caso obviamente el objetivo era hacer una cuenta no lo hizo porque el texto que precio 1 y precio 2 son dos variables de tipo texto con lo cual cuando yo creo este total con el más es más no representa una una cuenta sino una concatenación bis que sigue yo me paro acá y me dice el tipo de variable que cada unos preciados es del tipo string precio uno de tipos obviamente total base al tipo stream bien si yo en realidad insisto con el tema de la cuenta vamos a ver qué cambio debería ser acá estamos viendo y lo primero que tendría que hacer es usar la función int si int lo que hace es convertir un texto en entero en número integra sí entonces ahora sí precio uno ya no va a ser ven como marca aquí no va a ser de tipo stain si no va a ser de tipo int y por ende esto va a dejar de ser una concatenación y va a pasar a ser una operación matemática cuyo resultado va a ir a la variable total que también es de tipo y ahora cuál es el problema si yo intento hacer una concatenación me va a ir muy mal este por qué porque yo pongo el peso total es más total como dice en el programa vamos acá un poquito el programa anterior si escribiese esto mismo me va a dar un error porque porque el precio total es es un string es un número entonces eso no va a funcionar si como se trabaja con eso se trabaja con este complemento efe que lo que me dice es que es una expresión de tipo formato en el cual va a existir un valor de tipo numérico como se inserta en el texto ese número es el número ese valor numérico perdón no hay que hacer ningún más hay que ponerlo si incluirlo dentro de la expresión fíjense que está encerrado al igual que en lo que es el texto propiamente dicho entre dos comillas pero ese total si tiene que estar a su vez encerrado entre estas llaves de ese modo entiende que lo que quiero si yo esto vamos a suponer lo pusiese de este modo si escribiría literalmente el precio total es total si no es el val no la verdad si no el texto total entonces lo que yo tengo que hacer acá es encerrar ese valor como decía ahora siempre entre llaves y con el complemento efe si le voy a decir que esto no es una concatenación de un elemento de tipo texto y un leyendo tipo numérico y así ha funcionado grabó porque hice ese cambio acuérdense siempre de grabar las últimas modificaciones porque si no probablemente esté ejecutando una versión anterior del programa bien ahí está el precio si en el segundo 200 y ahora sí obviamente me hace la cuenta y me muestra el resultado matemático que es 300 bien y yendo a la última parte de lo que tiene que ver con esta parte d esta sección digamos de tratamiento de variables y tipos de datos y cálculos numéricos hicimos un programa acá que tiene digamos el complemento de todos y es decir pedimos dos valores si ahora acuérdense usar la función int para cambiar ese valor de tipo texto que arroja naturalmente el input a convertir a un valor numérico ponemos por pantalla un mensaje como para hacer algo un poquito más mejor presentado donde voy a decir bueno los valores que vamos a usar para operar porque la idea de este programa es hacer todas las operaciones matemáticas que vimos recién en la parte teórica son número 1 y número 2 fíjense que acá yo ya nos inserto en esta expresión del pri un valor de tipo texto con uno numérico sino con dos numéricos y bueno se insertan en el lugar que yo quiero que vayan en la descripción del texto y lo que tengo que tener el resguardo que ambos tienen que estar encerrados entre llaves siempre no olvidar de poner él señalador efe si el elemento de aquí donde le indica que este texto va a ser una combinación de elementos diferentes de tipo texto con otros datos de tipo variable digamos si éste esté numéricos en este caso bien luego lo que hago en cada caso es hacer las operaciones matemáticas crear una variable cálculo y el primer caso voy a ser la suma entonces pongo número uno número dos y luego un print donde digo la suma es cálculo sí es decir muestro el resultado de la suma luego hago lo propio con el resto de las operaciones con la resta con la multiplicación con la división etcétera etcétera fíjense que siempre estoy re utilizando la variable cálculo como receptora de la cuenta propiamente dicha o la operación matemática propiamente dicha que yo haga en cada caso bueno esto es importante porque justamente las variables pueden reutilizarse esto es una cuestión que payton obviamente lo permite bien y acá tenemos la división perdón este luego tenemos la potenciación el módulo y la división entera sin la división en teherán ya todos saben que es el módulo es el resto de la división así que bueno no queda más que operar vamos a poner por ejemplo obviamente evitar poner el segundo valor un cero porque si no le va a dar un error en todas aquellas operaciones que sean de tipo división bien bueno fíjense que nos quedó vemos el último la última parte del texto o sea las últimas cuatro líneas la división del módulo la potencia y la división la visión entera perdón el módulo de la potencia y la división porque porque la terminal tiene un tamaño determinado es decir todo lo que pasó antes no es que no está si yo le doy con el scroll está y lo veo más arriba entonces lo que puedo hacer acá es levantar la terminal y ahí voy a poder ver todo en una sola expresión si bien introduzca el precio pero esto es el del programa anterior porque aquí este evidentemente éste nos ha quedado entonces ponemos el primer valor 10 el segundo valor 2 y muestro el texto los valores para operar son 10 y 2 y ejecutó todas las operaciones la suma es esto el arte es esto la multiplicación excepto la división es esto la potencia es esto el módulo sexto y la división en teoría sexto hemos puesto una división dos valores que dar una división exacta así vamos a probar con otro tipo de valor para poder ejecutar algo mejor vamos a eliminar la terminal acá y lo vamos a ejecutar de nuevo así que un poquito más limpios diez y tres cosas que la división no sea exacta sí bueno y ahí sale todo y se puede ver bien es decir pero voy a levantar bien la terminal aquí tengo 10 3 son los valores los valores para operar son 10 y 3 y empiezo la suma y la resta multiplicación la división que no es exacta la potencia el módulo que es 1 por qué porque 10 / 3 da tres y que a un resto de uno y el resultado la división era justamente es 3 bien hasta que llegamos con esta parte de variables de operaciones si éste y de operaciones matemáticas y de tipo de datos bien ahora vamos a adentrarnos en el tema de funciones todos ya entienden que es el concepto de una función bueno cómo se define una función en python con la palabra de el nombre de la función y este par de paréntesis que por ahora están vacíos vamos a ver eso más adelante y con dos puntos cuando yo esté en tema muy importante en python y ya lo vamos a empezar a ver ahora y es parte de la estructura de payton en muchos lenguajes hay definidores de bloques si éste pueden ser un símbolo como una llave bueno después alguna cuestión de algún lenguaje que tenga un gen de fusión en if en force one algo que cierre de alguna manera la estructura en python eso no es así en python cuando se define una estructura se la termina en ese renglón con dos puntos como ven aquí de saludos dos puntos esos dos puntos indican que así empieza una estructura con lo cual todo lo que está debajo y yo pretendo forme parte de esa estructura tiene que estar con una intenta ción clara como la que ven aquí acá yo puse 4 prince que lo que veíamos en el peso del programa anterior de presentación y automáticamente visual studio code me marca con una línea cuáles son todas las instrucciones que están dentro de la función y dónde termina el bloque es donde termina la línea obviamente acá en la línea en la línea número 9 no existe esta línea delgada de aquí y por ende se entienda automáticamente que allí termina ese bloque cuando yo le escriba algo en esta intenta acción y no he intentado hacia adentro si va a entender voy a poner print a secas aquí ese print no le pertenece a la función saludos salud de alumnos si yo pongo esto con el dedos y la intenta ción perdón fíjense que la línea aquí gris del costado se extiende por un renglón más entonces ese print si pertenece en este caso a la función bien lo vamos a borrar dado que no nos interesa ni para una cosa ni para la otra bueno obviamente acá lo que hago es invocar a esta función tres veces si simplemente escribo el nombre de la función y los dos los dos paréntesis de esta manera hago que se ejecute esta función saludo alumnos en algunas cuestiones importantes también aquí hay una cuestión de forma de expresar el nombre de la función es absolutamente irrelevante muchas veces por una cuestión de convenio o de costumbre dentro de la comunidad de payton se usa si hay una frase combinada que la letra capital que es la primera letra de la segunda parte de la palabra en este caso claramente es alumnos empiece con una mayúscula así de esa manera se puede tener como un convenio que también estas cuestiones tienen que ver con lo que se acostumbre dentro del marco de una comunidad o bien de una empresa que tenga una determinada forma de trabajar sí que esto no es definitivo como siempre el nombre puede ser cualquiera si con guión bajo bueno lo que ustedes se leerán bien tenemos entonces la posibilidad aquí vamos a limpiar esta terminal que nos quedó del ejercicio pasado grabamos porque acuérdense miro aquí arriba y veo que el programa está pendiente de grabación le doy control s lo grabo lo ejecutó y bueno obviamente me va a salir ese código este 12 líneas porque son se va ejecutar tres veces como bien los también si bien este en el caso de de todo lo que tenga que ver con las funciones está la función la forma más sencilla de expresar a una función si yo voy a ver ahora otra que hace o tiene un propósito similar que sería este de poder hacer un cálculo numérico si es muy parecido delante no solamente que en lugar de imprimir un 4 línea de texto lo que hace es hacer un cálculo si crea tres variables numéricas nos da un anotador nota tres hace una operación matemática suma las tres y las divide por tres con el propósito de imprimir el trabajo el print como ya lo vimos en el apartado anterior cuando vayamos el tema de las variables se hace con efe y poniendo entre llaves la variable que en este caso de tipo numérico la forma de invocar a la función es como vimos aquí escribiendo su nombre bien no hay mucho más para agregar lo ejecutamos y ya vemos que el resultado obviamente es 7 porque las variables las las notas son 7 6 y 8 ahora vamos a la función la próxima forma de trabajar una función que es el tema de los argumentos si hasta ahora nosotros trabajamos con funciones que tenían esta forma sí donde simplemente lo que tiene que hacer lo tiene que hacer con todos los elementos que están dentro de la función ahora esa función no se va a ejecutar con los elementos que tenga la función sino con la lo que yo le voy a le voy a mandar cuando la invocó cómo se hace bueno poniéndole cada uno de los elementos en este caso no está uno anotados en otra tres sí y cada vez que llamamos la función como ven aquí le pasó los valores en el primer caso 97 87 67 y luego 97 y 10 o sea cada vez que llamamos la función le mando los valores esos valores se van a asociar a cada uno de estos elementos que son declarados aquí y la función lo que va a hacer va a ser reproducir me el resultado de todas esas notas y así que lo ejecutamos y vemos que el resultado es obviamente primero 8 después 7 pues 8.666 6 6 porque obviamente no es una división exacta bien esto es en cuanto la variedad de la función perdón que ya cambia respecto a lo que habíamos ante donde no le mandamos argumentos de entrada acá definimos una función que tiene argumentos de entrada y vamos a ver también ahora cómo sería una función que no solamente recibe argumentos de entrada sino que también da una salida o sea retorna un valor bien bastante sencillo lo que tengo que hacer es en lugar de imprimir me paro en el programa anterior se acuerdan que acá imprimíamos el resultado no lo voy a imprimir el resultado lo que voy a hacer lo voy a mandar si atravesó mejor que lo voy a devolver a ese valor a través de un retorno sí es decir que acá la función va a recibir tres valores 978 va a ser el cálculo matemático y me va a devolver el valor como me devuelve el valor yo ya no puedo llamar a la función como lo hacía antes simplemente escribiendo su nombre y en este caso los argumentos vamos a norma anterior recordamos no puedo llamar a esa función de este modo porque porque me devuelve un valor sin mover un valor tengo que poner un receptor que sea capaz va a ganar una redundancia de recibir ese valor entonces siempre tengo que asociarlo a una variable está bien si ejecute este programa obviamente no va a pasar nada porque lo que está haciendo son todas acciones este internas y que no hacen un eco en la pantalla así lo ejecutaran tal cual todas las veces que quiera y no va a pasar nada porque yo no he hecho ningún principio por ejemplo quisiera hacer ahora un print d pero me dio uno para de alguna manera visualiza algo de lo que ha hecho este programa bueno a lo ejecutó y ahora si veo que me devuelve el promedio del primer caso si hiciese lo propio con los otros dos casos si copiamos y pegamos bueno va a ser lo mismo solamente con este caso sí que sé que siempre me aparece aquí la ayuda no el vicio el estudio que me ayuda a que ellos descubra cuál es este cuál es el resultante digamos de las opciones que pueden salir cuando yo intenté escribir algo por aproximación voy a escribir una palabra parecida promedio y me parece justamente las opciones que puedo tener que pueden ser las de tres lado la 1 cuando creo 3 obviamente se afirma en la que he elegido bien logrado lo ejecutó y tengo las tres salidas parecidas a la que me dio en el caso de funciones 4 solamente si en este caso está en este programa anterior que se llama funciones 4 solamente que en este caso lo que yo hacía era cada vez que lo llamaba imprimía lo llame la primera vez imprimió la segunda y primero en esta serie primero la diferencia acá es que las tres veces lo que hizo fue ejecutar la cuenta y mandar una variable lo mismo acá lo mismo acá y después yo decidí imprimir el resultado de esas variables y bueno obviamente eso es son todas las opciones que podemos tener entonces de las tres formas de funciones no recibe argumentos ni devuelve valor es la que recibe vamos a repasar un poquito loca como esta que está aquí esta no recibe argumentos ni devuelve valores como el a4 que recibe argumentos pero no devuelve valores y en el caso de esta programa es que para mí está número 5 en el cual lo que fue es una función que recibe argumentos y devuelve valores bueno ahora vamos a ver las primeras estructuras de manejo de datos obviamente todas las estructuras que se manejan en memoria y que no escapan a todo lo que ustedes de alguna manera pueden haber manejado nuestro lenguaje de programación hablamos de diccionario hablamos de listas y hablamos de tu plan sí bien empecemos por las listas las listas en este caso son elementos que pueden ser de cualquier tipo las listas pueden alojar números como vemos aquí la lista uno pueden alojar textos como la lista 2 o puedes alojar elementos de distinto tipo así que sé que tenemos en la lista 3 un elemento de tipo texto un elemento de tipo integra y un elemento de tipo booleana si esto se puede hacer en las listas se pueden agregar elementos se pueden eliminar elementos bueno hacer todo el tipo de variantes que tengan que ver con su contenido si su contenido no es fijo y puede alterarse todas las veces que quieran de la manera que quieran justamente eso es lo que vamos a ver ahora aquí debajo donde en principio vamos a ver todas las cuestiones que tienen que ver con acceder a los datos de la lista bueno acá hemos puesto un input después de cada uno de estos renglones fundamentalmente para ir viendo paso a paso el input tiene solamente la función en este caso de detener la ejecución del programa ver el resultado y avanzar el próximo si no no no es algo que sea necesario para la ejecución este programa bien lo primero que tengo es la forma de imprimir toda la lista completa print listados la segunda es imprimir un elemento de la lista el 3 que no es el tercero sino el ordinal 3 que sería el cuarto porque la primera numeración empieza desde cero luego este un rango si éste de 0 a 2 y luego un rango que se toma desde el principio o desde el final si con justamente el complemento o sea sería parecido lo que pondría que cuando describiría un rango pero éste lo que pongo es que falta un elemento al final o falta un elemento al principio con lo cual le estoy diciendo es desde un elemento hasta el final o desde el principio hasta un elemento sí bueno lo ejecutamos para para poder visualizarlo y entenderlo mejor bien vamos con el resultado aquí y vemos bueno se paró en lo primero que es la impresión de toda la lista completa si bien no hay ninguna cosa extraordinaria con esto le doy enter ahora veo el tercer elemento el perdón el ordinal 3 que es el cuarto por eso aparece matías luego tengo un rango que es javier y laura bien acá es un tema importante porque ustedes van a pensar que esto está mal porque 0 2 puntos 2 para ustedes sería el 0 el 1 y el 2 bien no en python no es así cuando yo pongo un elemento final desde describiendo un rango el elemento final indica el elemento posterior al último no el último con lo cual si yo digo de 0 a 2 estoy implicando al 0 y el 1 y por eso tal cual sale javier y laura esto es importante que lo tengan presente porque muchos lenguajes programación esto no es así bien luego tenemos el 15 lista donde voy desde el 1 hasta los 2 puntos y 2 puntos y decir que irá hasta hasta el final con lo cual fíjense que tomando desde elemento 1 que es laura hasta el final que jose ignoró a javier que es el elemento 0 sí y bueno doy otro enter y voy ahora desde el elemento desde el principio por decirle alguna manera porque ante los dos puntos no tengo nada hasta el elemento 3 pero de nuevo aparece lo mismo que deseamos recién con cuando decíamos lista 0 a 2 lista 2 bayas de dos puntos a tres quiere decir que va desde el principio pero no hasta el número ordinal 3 sino va hasta el alimento anterior a 3 bien entonces por eso sale javier laura e irene bueno estos son algunos o algunas gestiones que tienen que ver con las opciones de cómo acceder a los datos a una lista vamos a ver ahora algunas otras cuestiones que tienen que ver con listas que es los métodos para manejar los datos si e ir alterando el contenido de una lista en principio como agregó un elemento con el método aprenda y poniendo entre paréntesis y entre comillas el nombre que quiero agregar bien vamos a hacer después de cada programa perdón después de cada método hacemos un print de un input para ver el resultado de por pantalla de esa acción bien después extend con extreme lo que hago extender la lista agregando dos elementos más en este caso si les pareció lo que pusimos recién solamente que acá fíjense la denominación es diferente porque cuando yo agrega un elemento juan se pone entre comillas como yo voy a extender una lista la lista se define con corchetes como ustedes ven aquí por lo tanto yo voy a extender la lista los elementos con los que yo vaya a intentar extender esa lista también tienen que estar encerrados entre corchetes bien luego la forma de insertar un elemento pero no como up en que up en siempre no me lo va a poner al final si éste acá yo con in ser puedo decir dónde lo quiero insertar entonces estoy siendo que ramiro lo quiero al principio de todo entonces le digo que lo quiere en el lugar 0 y que elemento quiero sí bien y después las formas de eliminar datos con pop eliminó un dato si del final con pop 3 eliminó un dato concreto si por su número ordinal o bien para eliminar un elemento concreto por su contenido uso remote bueno lo vamos repasando ahora así de alguna manera también repasamos este cómo visualizar bien entender bien cada una de estas cosas que hemos explicado ejecutó el programa y este lo primero que voy a ver es el agregado de juan si dijimos yang con apple pasa el elemento que agregó al final si ven aparece juan después de jose bien estoy entero aquí y vamos a extender ven con extend agregó pero ya no agregó un elemento agregó un espacio es como si le sumará una lista a una lista que existe también si hubiera una concatenación de listas siempre va al final ahora vamos con el tema de ramiro recuerda que dijimos que ramiro con la indicación de que del lugar con el 0 le digo que yo que vaya en primer lugar bueno vamos a decir si efectivamente es así ramiro va al lugar número 0 si le pusiera al 112 3 guardaría lugar que corresponde o que yo tengo ganas que vaya bien ahora vamos a los metros de eliminación con pop elimino de donde del final si te acuerdas que dijimos recién eliminó con poco y tantas veces como executive pop va a ir sacando el último elemento de la lista si quiero eliminar un elemento determinado que en este caso sería el elemento 3 es decir irene hago pop sub 3 y fíjense que irene automáticamente desaparece que era la que estaba en el número ordinal 3 y si quiero eliminar un elemento en concreto si éste lo hago con buen ritmo y la descripción del contenido de ese elemento en concreto lo que quiero eliminar el aura pruebo y bueno efectivamente la que ha quedado eliminada ha sido laura bien vamos a otras cuestiones finales que tienen que ver con las listas tenemos otros métodos que tienen que ver con el ordenamiento de la lista si tenemos rivers tenemos sort y sort con el complemento riverside con rivers lo que hace es dar vuelta a una lista pero dar una vuelta una lista con el contenido que tiene que no tiene que ver con una cuestión de orden si ustedes fíjense que la lista acá por ejemplo samuel está antes que eso 6 laura y alfabéticamente eso no sería lo lógico si entonces lo que tienen que entender aquí que rivers es lo que va a hacer es poner o hacer que se ejerza justamente la lista sin que eso implique que haya un ordenamiento ni alfabético ni numérico ni en ningún tipo bien luego tenemos short que son si hace un ordenamiento si y sort con rivers true quiere decir que va a ordenar del final hacia adelante de atrás hacia adelante si el típico ordenamiento zeta como se dice habitualmente bien y luego algunas cuestiones que tienen que ver con la forma de buscar datos si bien en principio en la lista 2 me encuentro con que tiene 2 lauras si ven que en la posición número 1 y en la posición final hay una laura entonces con count me devuelve un valor que es la cantidad de veces que encuentra ese valor en la lista si bien luego hacemos algo parecido poniéndole 4x con la intención de que obviamente me devuelve un 0 si porque obviamente no va a encontrar si no encuentra nada me devuelve el dato de que no encuentra nada si luego es algo parecido pero con index es decir index no me devuelve si cuantas veces está un determinado valor sino en qué posición está ese valor por eso fíjense que hago un ejemplo con juan si luego algún ejemplo con laura y ahora en la prueba vamos a ver que los valores que me devuelve y luego finalmente el tema de index si porque vamos a encontrar un defecto en el caso de index de laura' por eso tenemos un index laura y un index laura como 2,5 porque el aula personal no index está dos veces como dijimos al principio el primer index lo que me va a dar si este que está escrito aquí es como resultado y ya lo vamos a ver en la prueba la primera aparición del aura que se me va a hacer que es uno la posición ignorando que el aura también está en la posición 0 1 2 3 4 5 6 si éste debe de estar esta lista sí entonces luego fíjense que tengo un index laura como a 2.5 que quiere decir le digo empeza a buscar la función del aura pero desde el lugar número 2 y hasta el 5 obviamente en ese caso me va a encontrar la segunda laura y no la primera laura porque como le digo que arranque desde el 2 y laura hasta la posición 1 es como que los dos primeros elementos que son araceli lauras los va a dejar totalmente de lado y voy a empezar a buscar desde juan y cuando empieza a buscar de de juan obviamente me va a detectar la función de la segunda laura y no de la primera bien vamos a ejecutar este programa como venimos haciendo para terminar de entender bien toda esta cuestión que estamos describiendo aquí y lo primero que vemos obviamente es la lista con rivers fíjense que lo que hizo es dar vuelta literalmente la lista la lista original empieza con aracely terminada con laura y lo que hizo fue dar la vuelta si empieza con la obra y termina con aracely ningún tipo de ordenación y de tipo numérico ni de texto ni en nada ahora le doy enter y ahora si la lista a partir del método short si aparece ordenada si éste le doy enter y veo ahora que esté la lista aparece ordenada pero como dijimos antes con la forma zg es decir aquí arriba aparece con la forma normal de ordenamiento alfabético aceptado si fuera 20 numérico sería de 0 al número que sea y en la segunda oportunidad aparece la forma de orden se tapa bien luego tenemos las formas de buscar que habíamos dicho en qué lugar está laura en la posición número dos levantamos un correo vemos un poquito esto aquí si laura está en la posición número 2 efectivamente está la posición número 2 buscamos este a una persona que llame 4x que no existe bien el número que me dice perdón perdón perdón me confunde lo que dije recién voy a corregirme el valor anterior es count con lo cual me dijo no que el aura está en la posición 2 que hay 2 lauras que el aura el valor la aorta dos veces disculpas por el error entonces repasando el primer listados puntocom del aura lo que hace es decirme cuántas veces está laura en la lista y me dice dos porque está dos veces no porque está la segunda posición si bien ahora sí en el caso de buscar una persona que se llame cuatro veces x el valor que me devuelve 0 porque una persona que se llame así no existe en toda la lista está 0 es así bien ahora estamos en index de juan que me dice la posición en la cual está juan y me dice que está en la tercera posición si esto obviamente estamos tomando la lista está no si no la que está dada vuelta bien y finalmente la posición del aura si vemos aquí la posición del aura es uno porque está samuel primero la hora después sí pero si yo ahora le digo como dijimos hoy empieza a buscar desde la posición número 2 va a tomar está laura y está laura la va a ignorar y entonces le doy enter justamente me dice que justamente arrancó buscando de la posición 2 y justamente la posición 2 está laura bien esto es muy importante todas estas cuestiones y hay muchos más métodos ya vamos a ver algunos más de listas porque bueno igual que todo el manejo de archivo de textos es fundamental para todo lo que es ciencia de datos la gestión de ciencia de datos que se puede hacer con compactos si bien luego vamos y algunas cuestiones más que tienen que ver con las listas que son las últimas que es el tema de concatenación de vistas si aquí tengo una lista tengo otra y para concatenar una lista tengo que hacer como si fuese una informes tendríamos por decirlo de una manera no entonces la lista 3 es la concatenación de la lista 1 de la lista 2 y luego hacemos un print para que se vea el resultado con un input para que se detenga la ejecución del programa y podamos ver el resultado de todo esto que estamos viendo por pantalla luego creamos una lista 4 sí y volvemos a crear una lista 3 en base a la lista 1 y de la lista 4 porque hacemos esto porque acá en el caso de la lista 3 yo estoy uniendo 2 listas numéricas si en el caso de lista 3 yo estoy juntando a la lista 1 que es de tipo numérica con lista 4 que no es de tipo numérico con lo cual esto lo que estoy haciendo es afirmando aquella cuestión de que las listas pueden tener elementos de distinto tipo de datos si bueno imprimo la lista 3 y veo su resultado bien luego algunas cuestiones que tienen que ver con el máximo y el mismo con la función del método max si esté alojado en una variable puedo ver el valor máximo una lista a que veo el valor mínimo una lista y finalmente con le puedo contar la cantidad de elementos que tiene una lista sí es decir leen de la lista 2 me dará un valor que todo el mostrando aquí y le entra lista 3 minar otro valor que también lo estoy mostrando aquí pero vamos el programa y vamos paso a paso viena que ejecutamos entonces el programa el primer sprint de lista 3 que ha resultado de la suma de lista 1 + lista 2 bueno está a la vista que eso ha pasado si vamos ahora con el print de lista 3 lista 3 es resultado de en la concatenación de lista 1 + lista 4 donde estoy mezclando tipos distintos de elementos entonces fíjense que tenemos los tres elementos de lista 1 1 2 y 3 y los 5 elementos de la lista 4 bien vamos ahora con el tema de valor máximo vídeo bien entonces estamos entre aquí y tengo el elemento máximo de la lista 1 recordemos que tenemos 1 2 y 3 el máximo estrés vamos al elemento mínimo de la lista 1 de lista 2 perdón que es 45 la lista 2 acuerdo que tenía 45 99 18 el mínimo es 45 bien que tenemos ahora el largo de la lista dos son tres elementos vamos más arriba vemos la lista dos tienen tres elementos y finalmente el largo de la lista tres que son ocho elementos así que la tenemos acá al alcance de la vista si los tres porque se acuerda que hemos juntado una lista la uno con la otra lista de la cuatro entonces tenemos uno dos tres cuatro cinco seis siete ocho elementos seguimos ahora con el tema de tu plan y bueno en la tabla es mucho más sencillo porque justamente sus características son mucho más limitadas la tabla puede tener elementos de un tipo de otro pero son fijos y determinados es decir no se pueden agregar más elementos no se pueden quitar ni se pueden reordenar si entonces éste obviamente en este caso lo complicado es que la cantidad de opciones para las cuales se puede utilizar una luna tula obviamente es limitada pero bueno la idea es abordar también este tema para que ustedes lo entiendan y así tenemos en principio cómo se crea una dupla a diferencia del caso de la lista en lugar de escribirla de definirla perdón escribiendo sus elementos separados por comas pero encerrados entre corchetes en este caso es encierran entre paréntesis y entonces tenemos por ejemplo atup la una que está compuesta por tres elementos de tipo numérico y la to prados que está compuesta de cinco elementos de tipo textos y después tenemos una lista que gestiona por porque pusimos lista justamente acá porque podemos demostrar con lo que está escrito aquí en la línea 8 que yo puedo crear una dupla desde una lista la lista 3 por ejemplo está allí con esos tres elementos que son de tipo diferente como ya lo habíamos visto en el caso que habíamos está hablando recién de las listas a través del método tupper yo puedo haciendo está pluralista en este caso la lista 3 crear una tabla bien esas son las formas que hay para la creación de una tabla y luego bueno ver un poquito este tema de algunas cuestiones que tienen que ver con formas de acceder a los datos o algunas características de la tabla en principio podemos imprimir toda una tabla completa podemos imprimir un elemento una dupla bueno hay dos ejemplos de cómo imprimir un elemento de una tabla el elemento 3 de la tabla 2 y el elemento donde tú pre 3 luego cómo se determina o se puede consultar el largo de una dupla también tenemos dos ejemplos y finalmente lo que puedo ver es éste con count si como en el caso de la lista ver cuántas veces está un determinado elemento en este caso el elemento 45 sí y finalmente lo que es bastante curioso así que puede pasar digamos el tema de que una tu plan puede pasarles sus valores una misma cantidad que la cantidad de valores de variables fíjense que era tu plata 3 es la que armamos a partir de la lista 3 y tiene tres elementos un nombre una edad y una condición una canción juliana es un valor juliana en este caso estruch bien eso hace de que yo pueda poner una lista de tantas variables como elementos tienen a tu plan e igualarla tu plan con lo cual a partir de aquí tengo nombre edad casado igual a tu plata 3 que quiere decir que el valor de juan pérez varió la variable nombre el valor 45 variedad y el valor true va a ir a la variable casado en este caso debe representar como un estado del estado civil digamos si está casado no está casado bien y para mostrar un poquito eso hacemos un print utilizando la resultante de esos de esas variables que obtienen su valor a través de esta igualdad con la tu plan en el cual obviamente tenemos y también está bueno para ver cómo se combina en una expresión de un print un print de una cadena armada con elementos de tipo texto cerrado entre comillas una variable de tipo texto y una variable de tipo numérica en el caso de la variedad de tipo numérica obviamente s encierra como sea sabemos entre llaves y poniendo obviamente el complemento de efe que me permite hacer esa combinación sí y luego obviamente la concatenación con una variable de tipo texto como el nombre bueno se hace con el más y no mucho más que eso bien ejecutamos el programa y empezamos a ver todas estas sociales y en principio lo primero que tenemos sprint de la dupla 2 bueno me muestra la top lados tal cual con sus cinco elementos luego orientar este elemento 3 de la 2 javier laura y tienen y matías matías es el ordinal 3 que recordemos no es el tercer elemento luego el elemento 2 de la plata 3 que sería 0 juan pérez 145 23 por eso me muestra tu bien después el largo de la top la 13 elementos el largo de la tabla 25 elementos finalmente qué cantidad de veces está 45 el valor 45 dentro de la tabla 3 una sola vez y finalmente la expresión de tipo texto que es resultante de haberle pasado los elementos de la tabla a las variables nombre edad y casado bien ahora el tema diccionario sí que es la última estructura de datos de esta que vamos a ver en esta parte de la clase y justamente el diccionario es una estructura muy particular que tiene algunos puntos de común con las listas en términos de que sus elementos pueden ser de cualquier tipo pueden agregarse elementos pueden modificarse elementos pueden eliminarse elementos al igual que como las acciones que hacía con la lista sea a diferencia de la tabla que tiene valores fijos que no se pueden ni modificar ni agregar ni eliminar en este caso el diccionario guardó un patrón de comportamiento similar en ese sentido la lista una diferencia hasta que el diccionario no tiene elementos y no tiene parejas de alimentos si tiene una clave y un valor asociado a esa clave si entonces tenemos que todo el diccionario se crea encerrando una expresión entre llaves pero cada pareja constituida por dos elementos que están separados por dos puntos que a su vez se separan de sus otros elementos colegas a través de una coma aquí tenemos un ejemplo donde lo que tengo es un diccionario con todos clubes de fútbol donde la primera clave es como una berbia tura de ese club y la segunda es la denominación concretamente del club si tenemos cuatro clubes cuatro parejas de datos si bien y luego lo vamos a imprimir diccionario para que lo veamos por pantalla esto luego como accedo a un elemento del diccionario puedo hacerlo a través de su clave es decir a través d la expresión digamos del diccionario entre corchetes el nombre de la clave y ya accedo a su valor luego cómo agregar un elemento bueno como está escrito aquí lo que hago es escribir un diccionario 1 en este caso el nombre el dizionario diccionario 1 entre corchetes la clave del nuevo elemento e igualando la al texto del nuevo elemento bien luego como modificar un elemento y uso de alguna manera como excusa el elemento que recién acabo de agregar porque veo que real madrid lo he escrito con una minúscula y era mi idea si este que la primera letra de cada palabras ya es mayúscula entonces es una excusa como para decir bueno voy a cambiar ese elemento y fíjense que lo que escribo es exactamente lo mismo que lo que escribí en el punto 3 donde decía para agregar un elemento solamente que en este caso lo escribí como quiero que aparezca definitivamente pero en la expresión es exactamente la misma con lo cual acá hay una inteligencia que tiene el diccionario en qué sentido que si voy a agregar un elemento perdón voy a escribir algo con la intención de agregar un elemento el diccionario lo que va a hacer es ver si ese elemento está ya o no si no está lo agrega y si no está entiende que lo que quiero hacer es lo que quieras en el paso 4 que en realidad es modificar el elemento y lo va a modificar también o sea que ya tiene una inteligencia el diccionario que obra en consecuencia a bueno la realidad que el que tiene su diccionario si tiene el elemento uno lo tiene bien y finalmente cómo eliminar un elemento de la lista vamos a eliminar puntualmente el elemento de del club chelsea con el método del sí que éste lo que hace es si yo pongo el diccionario de nuevo entre corchetes la clave de un elemento que quiero eliminar bueno justamente con del lo elimina bien vamos a ejecutar esto para verificar todo esto que hemos dicho bueno aquí tengo en principio la impresión del diccionario 1 luego este la impresión de la clave sh que es obviamente el nombre chelsea luego agregó un nuevo elemento a al diccionario y lo imprimo y así aparece ven al último rm y real madrid que es lo que veo justamente es aquello que decía que quería modificar para que aparezca la rd real en mayúscula y la m de madrid mayúscula también con lo cual hago el cambio imprimo y veo que el cambio tuvo efecto y finalmente quiero con el método de borrar este club chelsea bueno lo ejecutó lo hago y al imprimir veo que el club chelsea ya no está más bien vamos a ver otras cuestiones ahora que tienen que ver con el diccionario y que son relativas a ver este en principio un diccionario que conceptualmente y técnicamente digamos es diferente al anterior porque en el caso del anterior tenía todos clubes de fútbol es decir tengo muchos elementos que tienen que ver con una misma cosa sí o sea mejor ellos son variantes de un mismo concepto acá tengo un diccionario que tiene atributos de algo también es decir antes tenía todos los clubes cada elemento era un club acá cada elemento es un atributo en este caso de lo que sería o sea una prenda de vestir sí bueno eso también para que entienda que conceptualmente el diccionario puede representar distintos tipos de cuestiones y además que vean que los elementos no tienen que ser que al igual que en el caso de la lista todo el mismo tipo si puede haber elementos de tipo texto de tipo numérico o de tipo juliano etcétera entonces aquí tenemos por ejemplo que el en cada bar o en cada pareja de datos que forman parte de este diccionario el primer elemento en la descripción del atributo y el segundo es el valor del atributo si tenemos el código de la prenda el color el talle y el precio bien luego vemos este el método copy el método copy sirve para copiar y crear un diccionario nuevo copiando lo desde otro si creamos el diccionario 3 que en principio toma todos los mismos valores que el diccionario 2 luego vamos a ver el método clear que éste en realidad lo que hace bueno que por ahí se pueden malinterpretar la palabra borrar un diccionario entendiendo que borrar quiere decir borrar el diccionario en realidad sería borrar el contenido del diccionario porque el método clear lo que hace es limpiar el diccionario no eliminarlo bien bien entonces con clear lo que hago es dejarlo en blanco si todos los elementos que le pasó elecciones de 2 con el método copy desaparece y el diccionario queda pero vacío y finalmente dos métodos y valores keys y valores que lo que hacen es éste imprimir todas las claves del diccionario o todos los valores literarios sí es decir en el principio le imprimiría lo que sería código color talles y precio tiene según 2001 verde l y 1200 bueno vamos a ver si esto es así lo ejecutamos y lo primero que encontramos aquí es el diccionario 2 ahora voy a ajustar el método copy para crear el diccionario 3 y luego imprimir leyendo 3 como veo imprimimos legionario 3 y me muestra exactamente lo mismo que me mostró en el diccionario 2 ahora vamos a limpiar el diccionario 3 y lo voy a imprimir y que me aparece un diccionario vacío sí porque lo que hice fue borrarle todos los elementos y ahora volvemos a seleccionar godos en el cual a través del método x aparecen todos los valores y todas las caras perdón y a través del método varios todos los valores fíjense como muestra esto el programa en cuestión todo lo que aparecen como claves y todo lo que aparece como valores aparecen encerrados entre corchetes con lo cual que quiere decir que la lista o el conjunto de valores de todas las claves de toda la x lo muestra en formato de lista de lista de payton y más allá de que constitucionalista del punto de vista simbólico si este y este conjunto de valores de un diccionario python también ve la muestra en formato de lista bien con esto terminamos todas aquellas cuestiones que tienen que ver con estas tres estructuras de datos pasamos ahora a ver las estructuras condicionales las estructuras condicionales concretamente en python s live que ustedes seguramente ya conocen acá tenemos un caso un ejercicio dentro del cual lo que yo hago es bueno e ingresar la nota un alumno y a través de una función que me devuelva la condición si está aprobado o reprobado completamente esta es la excusa para poder probar un if el eve se escribe con su else si éste su opción alternativa pero fijémonos bien que todas estas cuestiones que venimos diciendo que se manejan en python el if luego de la condición tiene que estar acompañado a los dos puntos todo lo que está dentro del ifd en la parte si digamos no no la parte alternativa debería estar intentado como está aquí por eso me dibuja esa línea y luego el else que sería la condición opuesta así pasa lo que la condición de arriba manifiesta que no está sea menor o igual que 5 menor que 5 perdón también tiene que estar ehlers con los dos puntos y lo que está dentro del él es también intentado todo lo que yo quiera poner dentro del if si estan tailers tiene que estar intentado a la misma medida y todo puedo poner todas las líneas que quieran y todo lo que quiera poner dentro del els lo mismo tiene que poner todas las puedo poner toda la seña que quiera pero tiene que estar intentado con la misma intenta ción luego como parte de lo que ya sabemos de la función retorno una condición que puede ser reprobado o aprobada bueno ejecutó el programa para probarlo y bueno obviamente voy a ver que ingresó a la nota del alumno supongamos que 5 me dice que está aprobado si éste si ingresó un 2 me dice que está reprobado muy sencillo el programa no tiene ningún secreto la idea era poder ver en funcionamiento el if cosa que vamos a ver ahora en este otro programa con un complemento más que es el él el if es decir que cuando yo necesito que tenga existe sujeta evaluación una cuestión por más de dos opciones posibles obviamente con él y con él es no me alcanza con lo cual aparece el el ifd el erick funciona como si fuese a veces un els y unif que le pongo después de leer si está sintetizada una sola palabra y por ende también tiene que estar acompañada la expresión a evaluar con dos puntos una vez que se terminó de comprobar esa condición bien acá tenemos un caso parecido al de recién solamente que en lugar de tener dos esté aprobado es aprobado tengo recursantes y saca en tres heridos reprobado saca entre tres y cuatro aprobados a que entre 5 y 6 y promocionados acá entre 7 y 10 por lo tanto tengo un if con cuatro condiciones por lo tanto voy a tener el if 2 el if y un else dado que la última alternativa evidentemente se va a deducir a partir de la no ocurrencia de las alternativas anteriores entretengo if not igual de 2 condición recursantes ellis nota menor igual que 4 condición reprobado el leaf nota menor o igual que ser condición aprobado else si no ninguna de las tres anteriores entonces quiere decir que promocionado bueno agua el return de la condición como ya lo teníamos y bueno acá tenemos un ejemplo de un el eve que es parte del if en las estructuras de payton lo probamos simplemente para ver lo vamos a descubrir nada nuevo bueno recursantes si lo ejecute lo pongo un 9 me dice promocionado bueno y así sucesivamente la nota que yo quiera poner me va a aparecer lo que tenga que aparecer según esta norma de este condiciones que he evaluado a través de la estructura condicional y bien la estructura condicional y también juega acabemos otro ejemplo con el oro y el and si acá vamos a suponer que tenemos un descuento que se le ofrecemos solamente a las personas que viven en córdoba rosario mendoza y si no vive ninguna de las tres ciudades que le ameritaría un descuento de 20% vivo a su edad y si esa edad es entre 18 y 26 años tiene un descuento del 20 por ciento y si no del 0% si bueno nada que ustedes no manejen vuelve a aparecer el if l live y él es sí y este sí es importante que tengan presente que se puede utilizar el orden dentro de la condición que acompaña live y el anc también dentro de la condición de compañía live recuerda algo muy importante que cuando ustedes preguntan o hacen algo expresa una condición por decirlo de modo más sintético a partir de algo que sea igual una variable igual a un valor se hace con 2 100 bolos iguales y no con 1 solo un solo símbolo se usa como tienen aquí a la hora de pasarle un dato a una variable sí pero cuando ustedes quieren preguntar o me valora una condición si algo es igual a otra cosa acuérdense que tienen que hacerlo con dos símbolos iguales y no con uno solo bueno el resto ustedes ven que la expresión de compaña live es más larga que antes pero es una expresión y por lo tanto tiene que terminar con dos puntos y la expresión que acompaña al el if lo mismo es un poco más larga no importa pero tiene que terminar con los dos puntos y cada uno de sus elementos intentado como corresponde bien qué más tenemos como opción condicional 5 otro programita donde lo que vemos aquí es bueno supongamos que acá en condicional 4 teníamos nada más que tres ciudades y hay que acondicionar el 5 en lo mismo pero tengo más ciudades sí entonces lo que hice fue crear una lista de ciudades con seis ciudades para no poner tanto y for your por lo que uso es un if y esto es importante y que quiere decir listas you es ésta ésta que está carrera y lo que hago es como pregunto si la ciudad que la persona escribió por pantalla si está dentro de esta lista como lo pregunto a eso bueno lo pregunto a través de baa de preguntar si es igual a tal cosa o si es igual al de los votos es igual a tal otra lo que hago simplemente es preguntar si ciudad en listas está dentro de la estación si la ciudad que escribe la persona por pantalla a través de input está dentro del estación entonces es otra forma de preguntar algo parecido a lo que veíamos recién en condicional 4 y aquí simplemente es otra expresión este de dif anidados así que ustedes seguramente ya conocen donde aquí el caso en concreto es ver si la persona estoy preguntando si la persona está en una determinada sede si en la centrada en la sede central o en otra hilada de cliente en base a eso voy a deducir el descuento tengo que quien está en la sede 1 tiene un descuento si tiene una edad mayor a 65 y si no nada si en el caso de que no esté en la sede central tiene un descuento si es mayor a 65 mayor igual 85 tiene otro descuento si es mayor o igual a 40 y si no no tiene nada si bueno esta es una idea de estructura de diferida 2 fíjense que se pone un if y dentro de seguir intentado otro día y segundo y obviamente con sus elementos también intentados dentro de swift y swells else el otro el otro dif anidado que también responde a la misma estructura solamente que como tiene tres condiciones a evaluar en lugar de tener un iphone else como el primer y fanny dado que está dentro de ese de uno tiene un irunés yúnes leaf no mucho más que eso y esté bueno no tiene sentido probarlo ya la idea es mostrar más que nada la estructura se los dejo a ustedes se prueba este código simplemente es ver que también tenemos o dentro de payton la estructura de y fanny dados y como se escribe el código cuando tenemos una situación que amerita una estructura condicional de ese tipo bueno como último elemento de la clase de hoy vamos a ver el tema de las estructuras de tipo de bucle si dentro de las cuales en python tenemos dos force y while si en el caso de ford obviamente sigue el mismo patrón de comportamiento que la estructura que vimos antes de if por ejemplo o la definición de las funciones donde no hay una estructura de cierre no hay un en de fort como igual tampoco hay un en while ni tampoco hay un elemento de apertura y cierre como puede presumirse unas llaves por ejemplo bien aquí siempre funciona todo con dos puntos y eso abre la estructura y toda la componente o lo que integra esa estructura tiene que ir intentado y aparece esa línea como vemos ahí que está abajo del foro de la fd for donde me marca qué es o cuáles son todas las líneas que están dentro de esa estructura bien acá tenemos en principio una lista que la estamos tomando como ejemplo a los propósitos del ejemplo de este programa y tenemos un primer foro que es una forma de recorrer una lista tomando cada uno de sus miembros a partir de una estructura sobre la cual no tengo idea cuántos elementos tienen simplemente los recorro todos con una variable que llama list y digo por liz in lista print list es decir por cada elemento de la lista cada elemento lo voy a nominar o lo voy a poner dentro de una variable que he dado en llamar list y lo que hago bueno si cada elemento de la lista lo pongo en list brindis va a ser print de cada elemento de la lista luego tengo otra forma de expresarlo a esto donde yo esa sí conozco la dimensión de la estructura en este caso de la lista y sé que tiene siete elementos por lo tanto yo voy a hacer un foro y un range en el rango range sería el rango de valores de los que yo quiero recorrer si yo pongo 0.7 quiero decir que arrancó desde el 0 y como ustedes ya saben llegó al 61 al 7 no al séptimo elemento o sea esto lo vemos en las otras estructuras anteriores lo que yo pongo como último elemento la referencia de manera ordinal el último elemento sino el próximo al último sí entonces y después obviamente hago un print de lista sub y también porque justamente y me va a ir él me va a ir dando el número ordinal de cada uno de los elementos de la lista bien dos formas de hacer exactamente lo mismo y por ende ojo tener exactamente el mismo resultado lo ejecutamos y acá lo vemos y primero el recorrido de la lista con los siete elementos y recorrerá lista otra vez con los siete elementos fíjense que fue con un título que yo puse aquí en estos print de aquí arriba recorrer la lista y luego recorrer la lista otra vez bien si yo ahora hago algún cambio en range ya no voy a tener ningún resultado vamos a suponer que yo le digo de que quiero que ahora arranque desde el 2 y tomé 3 elementos por decir algo bien perdón tres elementos pero hasta el número tres vamos a otro número 5 que sería yo pongo acá para ejercitar bien si desde el 2 quiere decir que arrancó desde juan y si quiero ir hasta el 5 que decir quisiera ir hasta el 4 entonces voy a imprimir el 2 el 3 y el 4 juan y viene y samuel y vamos a ver si es cierto esto acá está a levantar un poquito la terminal y vemos que tenemos en principio recorrer la lista los siete elementos y luego recorrer alito a través juan y de ni samuel porque porque como yo lo dije lo puse aquí arrancó desde el elemento número 20 0 1 y 2 o sea desde juan y le digo que quiero llegar hasta no hasta el 5 sino hasta el anterior del 5 el 5 es jose entonces juan y denis amo que es lo que me muestra aquí juan ir en izamal bien vamos a ver algo más de bucles el foro también me puede servir para recorrer toda la estructura de texto carácter a carácter como lo hago bueno email es una variable que la tomé en este caso de este ejemplo si acá lo que quiero hacer con este programa es poder ver si la estructura de un email si responde bronce lo que se ingresa por pantalla como un email responde la estructura de un email viendo si tiene arroba o si tiene por error supongamos más de una vez escrito la arroba si entonces hacemos un input para poner su contenido a la variable email vamos a hacer una variable de contador sí para ir contando la cantidad de veces que aparece el símbolo arroba dentro de la estructura de la variable email y acá tenemos for y un email qué quiere decir esto por cada elemento de la variable email obviamente que esto tiene que ser una cadena nos serviría para un número mucho menos para muriano sí entonces pero no es una estructura de datos sino acá no estoy recorriendo una lista no estoy recorriendo un diccionario no estoy recorriendo tu plan recorriendo un texto uno por uno esto es muy muy utilizado en lo que tiene que ver con ciencia de datos es muy común entonces esta estructura es importante que le prestemos atención fort y nivel quiere decir que por cada letra dentro del texto email voy a preguntar if i igual arroba si es igual arroba hago con está más 1 igual a 1 que acuérdense que esta es una metodología de abreviada de poner con está es igual a cuenta más 1 si sería lo mismo que yo escribiese esto que estoy escribiendo acá con está igual con está igual a cuanta más 1 si entonces una manera abreviada de escribir esto es esta que tenemos aquí con está más igual a 1 y luego preguntó si contra 0 que decir que la dirección no tiene arroba si es 1 qué dirección tiene el formato correcto y si tiene más de 1 que la dirección tiene más largo pero más allá del ejercicio que es la excusa simplemente para probar esto lo importante es entender que un foro puede también recorrer todas y cada una de las letras o carácter y vamos decirlo como corresponden o letras de una cadena de texto vamos a otra estructura forma otra textura for que tiene que ver con recorrer un rango de nuevo pero no hace falta a menos que sea necesario de entrada no hace falta que yo ponga por ejemplo si quiero recorrer un rango de 0 a 10 es decir esto que estoy escribiendo aquí si el primer valor es 0 se puede omitir yo popular 10 entonces acá por ejemplo lo que quiero hacer es poner una tabla de multiplicar las de modo de que yo pueda escribir un número y que me muestre bueno ese valor por 1 por 2 porque hasta llegar a 10 pero qué pasa en este caso en digo a veces se puede omitir a menos que sea necesario este es el caso porque porque si yo tomo esta estructura a los propósitos del programa si me daba un error porque el primer elemento no va a ser el uno va a ser el cero con lo cual me va a imprimir una tabla multiplicar no del 1 al 10 sino del 0 al 9 para que sea correcto entonces lo que tengo que hacer si es hacer un range con el par de números el que me dice de dónde y el que me dice como ya sabemos el valor posterior al último bueno probamos los dos para ver que esto efectivamente es así vamos a suponer la tabla del 2 y bueno así me imprime todo donde veo que en el primer caso ben fue del 0 al 9 porque el primero es 0 2 por 0 0 y el otro 2 por 9 18 y después al haberlo hecho arrancar como tenemos aquí desde el 1 a los propósitos del programa si bueno la tabla esté multiplicar es correcta va del 2 al 10 pero acá lo que queremos mostrar es que salvo que sea una cuestión necesaria es la lógica del programa si yo quiero arrancar de cero el range puede recorrerse sin necesidad de ponerle que implícitamente vas desde cero en adelante sino con la omisión ya asume que el primer elemento va a ser cero bien esto es todo lo que tiene que ver con for ahora la otra estructura que es el while bien acá con el wild lo que queremos hacer es lo mismo que hicimos en el ejercicio recién sabiendo de que hay cuestiones que son diferentes a la eufor porque para que el while termine la con termine de ciclar hay que poner una condición y menor o igual a menor a 11 perdón y luego para que el why vaya haciendo que ese valor que tomó como referencia vaya cambiando de valor tengo que hacer una cuenta dentro del white cosa que el foro lo hace de manera implícita entonces como hago una estructura acá les puso un comentario una para que no se ejecuta por supuesto como una estructura white que represente la misma idea que este foro bueno de esta manera arrancando una variable en un valor inicial un 1 para propósito este caso mediante puede arrancar en el valor que ustedes quieran la condición la acción que quiero hacer y el elemento que va a hacer que vaya avanzando el ciclo uno por uno y no me cree un while infinito sí porque si no pongo una cuenta de este tipo para cambiar o ir evaluando la condición si la condición no cambia el 'wild será infinito lo ejecutó para probarlo y veo que el resultado es ni más ni menos que la tabla de multiplicar que vimos recién en el caso del foro si le pongo el 2 tabla multiplicar de ese valor que quiero ver y el resultado es el mismo que vimos y en el caso de bucles 3 bien y finalmente creamos un programa que llama bucle 5 en donde doy otro uso del while si este este es un programa que lo que hace es ingresado los números a través de un menú es decir que quiero hacer con esos números cuál de las cuatro operaciones matemáticas esas que están ahí quiero hacer con ese número bien aquí lo más importante en el receso que como siempre digo es una excusa el 'wild puede utilizarse también o se utiliza muchas veces en cuestiones de validación cuando quiero que algo esté fundamentalmente que tenga que ver con el ingreso de datos esté dando ciclos hasta que una condición esperable se cumpla y yo acá he creado un menú con cuatro opciones sí pero pero no tengo ninguna garantía de que la persona no escriba un cero o un valor mayor a cuatro si con lo cual tengo que hacer una validación porque yo escribo un cero o malo mayor a cuatro esta estructura dice que tengo aquí abajo que responde a los valores 1 2 3 u otros va a hacer que siempre va a ejecutar la división porque es la que queda como con wells digamos que para hacer eso pusiera 5 s bueno es igual a 1 no es igual a 2 no es igual a 3 no entonces a una división cuando la división en realidad responde a la opción 4 no la opción 5 si digo 5 como decir cualquier valor que sea superadora 4 entonces hago un while justamente para poder validar y decir la única manera de que este while deje de circular y se rompa para proceder a hacer la operación concretamente que yo quiera elegir es que yo ponga un valor que sea de 1 a 4 mientras pongo un valor menor a 1 mayor a 4 esto base decirle bueno lo ejecutamos y vemos que lo que sucede es eso voy a poner los números 10 y 2 y vamos a poner la opción 6 vuelvo la opción 7 vuelvo la opción 8 vuelvo a la opción 4 ejecuta la división terminada la cuestión si acá lo que en realidad para emprolijar un poquito de esto como la validación está dentro del while y yo debería repetir esta orden en realidad aquí abajo pidiéndole que por favor vuelva a poner un valor sin que aparezca como veíamos recién que aparecía uno abajo del otro el pedido de rectificación entonces pongo dos números el 10 y el 2 y en pieza y digo bueno quiero un 6 no quiero un 9 en que ya no pone un abajo del otro porque dentro del wild pues el cls bien y hasta que ponga supongamos está en este caso la opción 2 que es la resta y me muestra resultado bien hasta acá llegamos con todos los temas relativos a esta clase y este bueno a partir de la próxima clase vamos a ir con los elementos que son un poquito más avanzados que estos que son las cadenas los elementos de cadena y luego de los elementos de cadena vamos a hacer una primera práctica aunando todas estas cuestiones y vamos a avanzar a otros elementos que son un poquito más avanzado que es el manejo de datos ya en estructuras que no se pierden que no son volátiles como las que vimos como en el caso de listas diccionarios como los archivos de texto muy importante como dije hoy en el tema del manejo de la gestión de datos para ciencia de datos y luego este el tema de las estructuras de base de datos bueno quedamos así en la próxima clase entonces seguimos viendo todos estos temas